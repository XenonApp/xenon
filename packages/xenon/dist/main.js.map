{"version":3,"sources":["../src/main.js"],"names":["app","dialog","ipcMain","BrowserWindow","require","fs","path","utils","join","__dirname","windowsFile","getPath","ZedWindow","windows","zed","quitting","removeWindow","win","splice","indexOf","length","saveOpenWindows","addWindow","title","url","window","load","show","push","getOpenWindows","filter","map","writeFile","JSON","stringify","encoding","err","console","error","shouldQuit","makeSingleInstance","args","workingDir","lastFocused","forEach","lastFocus","isMinimized","restore","focus","quit","on","openWindows","readFileSync","parse","e","isMacOS","event","preventDefault","Promise","all","saveAndCleanup","then","i","getWebContents","sender","browserWindow","fromWebContents","showOpenDialog","properties","dirs","send","relaunch","index","isFocused"],"mappings":"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","file":"main.js","sourcesContent":["const {app, dialog, ipcMain, BrowserWindow} = require('electron');\nconst fs = require('fs');\nconst path = require('path');\n\nconst utils = require(path.join(__dirname, 'shared', 'utils'));\n\nconst windowsFile = path.join(app.getPath('userData'), 'openWindows.json');\n\nconst ZedWindow = require(path.join(__dirname, 'main', 'ZedWindow'));\n\nconst windows = [];\n\nconst zed = {\n    quitting: false,\n    removeWindow(win) {\n        windows.splice(windows.indexOf(win), 1);\n        if (windows.length) {\n            saveOpenWindows();\n        }\n    }\n};\n\nfunction addWindow(title, url) {\n    if (typeof title === 'undefined') {\n        title = 'Zed';\n        url = '';\n    }\n    const window = new ZedWindow(zed);\n    window.load(title, url);\n    window.show();\n    windows.push(window);\n    saveOpenWindows();\n}\n\nfunction getOpenWindows() {\n    return windows.filter(win => win.path.length).map(window => {\n        return {\n            title: window.title,\n            path: window.path\n        };\n    });\n}\n\nfunction saveOpenWindows() {\n    fs.writeFile(windowsFile, JSON.stringify(getOpenWindows()), {encoding: 'utf-8'}, err => {\n        if (err) {\n            console.error('Error saving open windows', err);\n        }\n    });\n}\n\nconst shouldQuit = app.makeSingleInstance((args, workingDir) => {\n    // if they didn't pass a dir or file just focus a window\n    // TODO: open a new window if they want to and 2 should probably be 1\n    if (args.length <= 2) {\n        if (!windows.length) {\n            addWindow();\n        }\n        \n        let lastFocused = windows[0];\n        windows.forEach(window => {\n            if (window.lastFocus > lastFocused.lastFocus) {\n                lastFocused = window;\n            }\n        });\n        \n        if (lastFocused) {\n            if (lastFocused.window.isMinimized()) {\n                lastFocused.window.restore();\n            }\n            lastFocused.focus();\n        }\n    }\n});\n\nif (shouldQuit) {\n    app.quit();\n}\n\napp.on('ready', () => {\n    let openWindows;\n    try {\n        openWindows = fs.readFileSync(windowsFile, {encoding: 'utf-8'});\n        if (!openWindows) {\n            openWindows = [];\n        } else {\n            openWindows = JSON.parse(openWindows);\n        }\n    } catch(e) {\n        openWindows = [];\n    }\n    \n    if (!openWindows.length) {\n        return addWindow();\n    }\n    \n    openWindows.forEach(win => addWindow(win.title, win.path));\n});\n\napp.on('window-all-closed', function() {\n    if (!utils.isMacOS()) {\n        zed.quitting = true;\n        app.quit();\n    }\n});\n\napp.on('activate', function() {\n    // On OS X it's common to re-create a window in the app when the\n    // dock icon is clicked and there are no other windows open.\n    if (!windows.length) {\n        addWindow();\n    }\n});\n\napp.on('before-quit', event => {\n    if (!zed.quitting) {\n        event.preventDefault();\n        zed.quitting = true;\n        Promise.all(windows.map(window => window.saveAndCleanup()))\n            .then(() => app.quit());\n    }\n});\n\nipcMain.on('load-project', (event, title, url) => {\n    for (let i = 0; i < windows.length; i++) {\n        const win = windows[i];\n        if (win.getWebContents() === event.sender) {\n            win.load(title, url);\n            saveOpenWindows();\n        }\n    }\n});\n\nipcMain.on('open-directory', event => {\n    const browserWindow = BrowserWindow.fromWebContents(event.sender);\n    dialog.showOpenDialog(browserWindow, {\n        properties: ['openDirectory']\n    }, function (dirs) {\n        event.sender.send('selected-directory', dirs);\n    });\n});\n\nipcMain.on('open-project', (event, title, url) => {\n    addWindow(title, url);\n});\n\nipcMain.on('restart', () => {\n    app.relaunch();\n    app.quit();\n});\n\nipcMain.on('switch-to-project', (event, index) => {\n    if (!windows[index].isFocused()) {\n        windows[index].focus();\n    }\n});\n\nipcMain.on('quit', () => {\n    app.quit();\n});\n\nipcMain.on('get-open-windows', event => {\n    event.sender.send('open-windows', windows.map((window, index) => {\n        return {\n            index,\n            title: window.title\n        };\n    }));\n});"]}