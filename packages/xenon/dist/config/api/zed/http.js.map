{"version":3,"sources":["../../../../src/config/api/zed/http.js"],"names":["module","exports","fetchUrl","url","sandboxRequest","get","type","post","options","put","del","startServer","id","requestHandlerCommand","stopServer"],"mappings":"AAAA;;AAEAA,OAAOC,OAAP,GAAiB;;AAEb;;;;;;;;;;;;;;;;;;;;;;AAsBAC,cAAU,UAASC,GAAT,EAAc;AACpB,eAAOC,eAAe,UAAf,EAA2B,UAA3B,EAAuC,CAACD,GAAD,CAAvC,CAAP;AACH,KA1BY;;AA4Bb;;;;;;;AAOAE,SAAK,UAASF,GAAT,EAAcG,IAAd,EAAoB;AACrB,eAAOF,eAAe,UAAf,EAA2B,KAA3B,EAAkC,CAACD,GAAD,EAAMG,IAAN,CAAlC,CAAP;AACH,KArCY;;AAuCb;;;;;;;;;;;;;;;;;;;;;AAqBAC,UAAM,UAASJ,GAAT,EAAcK,OAAd,EAAuB;AACzB,eAAOJ,eAAe,UAAf,EAA2B,MAA3B,EAAmC,CAACD,GAAD,EAAMK,OAAN,CAAnC,CAAP;AACH,KA9DY;;AAgEb;;;;;;;;;;;;;;;;;;;;;AAqBAC,SAAK,UAASN,GAAT,EAAcK,OAAd,EAAuB;AACxB,eAAOJ,eAAe,UAAf,EAA2B,KAA3B,EAAkC,CAACD,GAAD,EAAMK,OAAN,CAAlC,CAAP;AACH,KAvFY;;AAyFb;;;;;;;;;;;;;;;;;;;;;AAqBAE,SAAK,UAASP,GAAT,EAAcK,OAAd,EAAuB;AACxB,eAAOJ,eAAe,UAAf,EAA2B,KAA3B,EAAkC,CAACD,GAAD,EAAMK,OAAN,CAAlC,CAAP;AACH,KAhHY;;AAkHbG,iBAAa,UAASC,EAAT,EAAaC,qBAAb,EAAoC;AAC7C,eAAOT,eAAe,UAAf,EAA2B,aAA3B,EAA0C,CAACQ,EAAD,EAAKC,qBAAL,CAA1C,CAAP;AACH,KApHY;;AAsHbC,gBAAY,UAASF,EAAT,EAAa;AACrB,eAAOR,eAAe,UAAf,EAA2B,YAA3B,EAAyC,CAACQ,EAAD,CAAzC,CAAP;AACH;AAxHY,CAAjB","file":"http.js","sourcesContent":["'use strict';\n\nmodule.exports = {\n\n    /**\n     * HTTP API\n     *\n     * Provides functions for performing HTTP requests.\n     *\n     * Usage example:\n     *\n     *     var http = require('zed/http');\n     *\n     *     http.post('http://host.tld', {\n     *         headers: {},\n     *         data: {},\n     *         type: 'application/json'\n     *     }).then(function onSuccess (response) {\n     *         var body = response[0];\n     *         var status = response[1];\n     *         var headers = response[2];\n     *     }, function onFail (status) {\n     *\n     *     });\n     *\n     */\n    fetchUrl: function(url) {\n        return sandboxRequest(\"zed/http\", \"fetchUrl\", [url]);\n    },\n\n    /**\n     * Sends a HTTP GET request to the given URL.\n     *\n     * @param {String} url The respective endpoint.\n     * @param {Object} type The type of data expected from the server.\n     *\n     */\n    get: function(url, type) {\n        return sandboxRequest(\"zed/http\", \"get\", [url, type]);\n    },\n\n    /**\n     * Sends a HTTP POST request to the given URL.\n     *\n     * options:\n     *\n     *     headers: {Object}\n     *\n     *         The HTTP headers\n     *\n     *     data: {Object || String} (optional)\n     *\n     *          The HTTP request body payload.\n     *\n     *     type: {String} (optional; default = Intelligent Guess)\n     *\n     *          The type of data expected from the server.\n     *\n     * @param {String} url The respective endpoint.\n     * @param {Object} options The configuration object.\n     *\n     */\n    post: function(url, options) {\n        return sandboxRequest(\"zed/http\", \"post\", [url, options]);\n    },\n\n    /**\n     * Sends a HTTP PUT request to the given URL.\n     *\n     * options:\n     *\n     *     headers: {Object}\n     *\n     *         The HTTP headers\n     *\n     *     data: {Object || String} (optional)\n     *\n     *          The HTTP request body payload.\n     *\n     *     type: {String} (optional; default = Intelligent Guess)\n     *\n     *          The type of data expected from the server.\n     *\n     * @param {String} url The respective endpoint.\n     * @param {Object} options The configuration object.\n     *\n     */\n    put: function(url, options) {\n        return sandboxRequest(\"zed/http\", \"put\", [url, options]);\n    },\n\n    /**\n     * Sends a HTTP DELETE request to the given URL.\n     *\n     * options:\n     *\n     *     headers: {Object}\n     *\n     *         The HTTP headers\n     *\n     *     data: {Object || String} (optional)\n     *\n     *          The HTTP request body payload.\n     *\n     *     type: {String} (optional; default = Intelligent Guess)\n     *\n     *          The type of data expected from the server.\n     *\n     * @param {String} url The respective endpoint.\n     * @param {Object} options The configuration object.\n     *\n     */\n    del: function(url, options) {\n        return sandboxRequest(\"zed/http\", \"del\", [url, options]);\n    },\n\n    startServer: function(id, requestHandlerCommand) {\n        return sandboxRequest(\"zed/http\", \"startServer\", [id, requestHandlerCommand]);\n    },\n\n    stopServer: function(id) {\n        return sandboxRequest(\"zed/http\", \"stopServer\", [id]);\n    }\n};\n"]}