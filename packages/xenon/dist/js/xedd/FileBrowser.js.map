{"version":3,"sources":["../../../src/js/xedd/FileBrowser.jsx"],"names":["cache","localStore","FileBrowser","Component","constructor","props","handleClick","file","setState","selected","path","handleDoubleClick","onClick","select","onSelect","state","render","files","map","key","bind","title","flex","display","flexDirection","overflowY","float"],"mappings":";;;;;;AAAA;;;;AACA;;IAAYA,K;;AACZ;;IAAYC,U;;;;;;AAEZ,MAAMC,WAAN,SAA0B,gBAAMC,SAAhC,CAA0C;AACtCC,gBAAYC,KAAZ,EAAmB;AACf,cAAMA,KAAN;;AADe,aAOnBC,WAPmB,GAOJC,IAAD,IAAU;AACpB,iBAAKC,QAAL,CAAc,EAAEC,UAAUF,KAAKG,IAAjB,EAAd;AACH,SATkB;;AAAA,aAWnBC,iBAXmB,GAWEJ,IAAD,IAAU;AAC1B,iBAAKF,KAAL,CAAWO,OAAX,CAAmBL,KAAKG,IAAxB;AACA,iBAAKF,QAAL,CAAc,EAAEC,UAAU,EAAZ,EAAd;AACH,SAdkB;;AAAA,aAgBnBI,MAhBmB,GAgBV,YAAY;AACjB,iBAAKR,KAAL,CAAWS,QAAX,CAAoB,KAAKC,KAAL,CAAWN,QAA/B;AACH,SAlBkB;;AAEf,aAAKM,KAAL,GAAa;AACTN,sBAAU;AADD,SAAb;AAGH;;AAeDO,aAAS;AACL,cAAMC,QAAQ,KAAKZ,KAAL,CAAWY,KAAX,CAAiBC,GAAjB,CAAqBX,QAC/B;AAAA;AAAA,cAAI,KAAKA,KAAKY,GAAd;AACI,yBAAS,KAAKb,WAAL,CAAiBc,IAAjB,CAAsB,IAAtB,EAA4Bb,IAA5B,CADb;AAEI,+BAAe,KAAKI,iBAAL,CAAuBS,IAAvB,CAA4B,IAA5B,EAAkCb,IAAlC,CAFnB;AAGI,2BAAYA,KAAKG,IAAL,KAAc,KAAKK,KAAL,CAAWN,QAAzB,GAAoC,UAApC,GAAiD,EAHjE;AAICF,iBAAKc;AAJN,SADU,CAAd;AAOA,eACI;AAAA;AAAA,cAAK,OAAO,EAACC,MAAM,CAAP,EAAUC,SAAS,MAAnB,EAA2BC,eAAe,QAA1C,EAAZ;AACI;AAAA;AAAA,kBAAI,OAAO,EAACF,MAAM,CAAP,EAAUG,WAAW,QAArB,EAAX;AAA4CR;AAA5C,aADJ;AAEI;AAAA;AAAA,kBAAK,OAAO,EAACK,MAAM,UAAP,EAAZ;AACI;AAAA;AAAA,sBAAQ,OAAO,EAACI,OAAO,OAAR,EAAf,EAAiC,SAAS,KAAKb,MAA/C;AAAA;AAAA;AADJ;AAFJ,SADJ;AAQH;AArCqC;;kBAwC3BX,W","file":"FileBrowser.js","sourcesContent":["import React from 'react';\nimport * as cache from '../cache';\nimport * as localStore from '../local_store';\n\nclass FileBrowser extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            selected: ''\n        };\n    }\n\n    handleClick = (file) => {\n        this.setState({ selected: file.path });\n    };\n\n    handleDoubleClick = (file) => {\n        this.props.onClick(file.path);\n        this.setState({ selected: '' });\n    };\n\n    select = async () => {\n        this.props.onSelect(this.state.selected);\n    }\n\n    render() {\n        const files = this.props.files.map(file => (\n            <li key={file.key}\n                onClick={this.handleClick.bind(this, file)}\n                onDoubleClick={this.handleDoubleClick.bind(this, file)}\n                className={ file.path === this.state.selected ? 'selected' : ''}>\n            {file.title}</li>\n        ));\n        return (\n            <div style={{flex: 1, display: 'flex', flexDirection: 'column'}}>\n                <ul style={{flex: 1, overflowY: 'scroll'}}>{files}</ul>\n                <div style={{flex: '0 1 auto'}}>\n                    <button style={{float: 'right'}} onClick={this.select}>Select</button>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default FileBrowser;\n"]}