{"version":3,"sources":["../../../src/js/xedd/Form.jsx"],"names":["localStore","Form","Component","constructor","props","connect","e","preventDefault","state","url","indexOf","setState","hint","user","password","err","message","config","onConnect","handleInput","input","target","value","componentDidMount","key","get","then","render","flex","bind","width","marginRight","marginTop","color"],"mappings":"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","file":"Form.js","sourcesContent":["import React from 'react';\nimport { getVersion } from './api';\nimport * as localStore from '../local_store';\n\nclass Form extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            url: 'http://localhost:7337',\n            user: '',\n            password: '',\n            hint: ''\n        };\n    }\n\n    componentDidMount() {\n        const key = this.props.config ? 'xeddConfig' : 'xedd';\n        localStore.get(key).then(config => {\n            if (config) {\n                this.setState({\n                    url: config.url,\n                    user: config.user,\n                    password: config.password\n                });\n            }\n        });\n    }\n\n    connect = async (e) => {\n        e.preventDefault();\n        if (this.state.url.indexOf('http') !== 0) {\n            this.setState({ hint: 'The url must start with http' });\n        }\n        try {\n            await getVersion(this.state.url, this.state.user, this.state.password);\n        } catch(err) {\n            return this.setState({ hint: err.message });\n        }\n        const config = {\n            url: this.state.url,\n            user: this.state.user,\n            password: this.state.password\n        };\n\n        this.props.onConnect(config);\n    };\n\n    handleInput = (input, e) => {\n        this.setState({ [input]: e.target.value });\n    };\n\n    render() {\n        return (\n            <form style={{flex: '0 1 auto'}}>\n                <input type=\"text\" onChange={this.handleInput.bind(this, 'url')} style={{width: '40%', marginRight: '5px'}} placeholder=\"URL\" value={this.state.url} />\n                <input style={{marginTop: '2px', width: '20%', marginRight: '5px'}} type=\"text\" placeholder=\"Username\" onChange={this.handleInput.bind(this, 'user')} value={this.state.user} />\n                <input style={{marginTop: '2px', width: '20%', marginRight: '5px'}} type=\"password\" placeholder=\"Password\" onChange={this.handleInput.bind(this, 'password')} value={this.state.password} />\n                <button onClick={this.connect}>Connect</button>\n                {this.state.hint ? <div style={{color: 'red'}}>{this.state.hint}</div> : null}\n            </form>\n        );\n    }\n}\n\nexport default Form;\n"]}