{"version":3,"sources":["../../../../src/js/sandbox/zed/fs.js"],"names":["module","exports","readFile","path","binary","require","catch","err","message","Promise","reject","writeFile","text","listFiles","resolve","getFileCache","listFilesOfKnownFileTypes","getFileListKnownTypes","reloadFileList","fetchFileList","isConfig","getProjectPath","getCapabilities","run","command","stdin","fs"],"mappings":"AAAA;;AAEAA,OAAOC,OAAP,GAAiB;AACbC,cAAU,UAASC,IAAT,EAAeC,MAAf,EAAuB;AAC7B,eAAOC,QAAQ,UAAR,EAAoBH,QAApB,CAA6BC,IAA7B,EAAmCC,MAAnC,EACPE,KADO,CACA,UAASC,GAAT,EAAc;AACjB,gBAAIA,IAAIC,OAAR,EAAiB;AACb,uBAAOC,QAAQC,MAAR,CAAeH,IAAIC,OAAnB,CAAP;AACH,aAFD,MAEO;AACH,uBAAOC,QAAQC,MAAR,CAAe,KAAKH,GAApB,CAAP;AACH;AACJ,SAPM,CAAP;AAQH,KAVY;AAWbI,eAAW,UAASR,IAAT,EAAeS,IAAf,EAAqBR,MAArB,EAA6B;AACpC,eAAOC,QAAQ,UAAR,EAAoBM,SAApB,CAA8BR,IAA9B,EAAoCS,IAApC,EAA0CR,MAA1C,EAAkDE,KAAlD,CAAwD,UAASC,GAAT,EAAc;AACzE,gBAAIA,IAAIC,OAAR,EAAiB;AACb,uBAAOC,QAAQC,MAAR,CAAeH,IAAIC,OAAnB,CAAP;AACH,aAFD,MAEO;AACH,uBAAOC,QAAQC,MAAR,CAAe,KAAKH,GAApB,CAAP;AACH;AACJ,SANM,CAAP;AAOH,KAnBY;AAoBbM,eAAW,YAAW;AAClB,eAAOJ,QAAQK,OAAR,CAAgBT,QAAQ,YAAR,EAAsBU,YAAtB,EAAhB,CAAP;AACH,KAtBY;AAuBbC,+BAA2B,YAAW;AAClC,eAAOP,QAAQK,OAAR,CAAgBT,QAAQ,YAAR,EAAsBY,qBAAtB,EAAhB,CAAP;AACH,KAzBY;AA0BbC,oBAAgB,YAAW;AACvB,eAAOT,QAAQK,OAAR,CAAgBT,QAAQ,YAAR,EAAsBc,aAAtB,EAAhB,CAAP;AACH,KA5BY;AA6BbC,cAAU,YAAW;AACjB,eAAOX,QAAQK,OAAR,CAAgBT,QAAQ,UAAR,EAAoBe,QAApC,CAAP;AACH,KA/BY;AAgCbC,oBAAgB,YAAW;AACvB,eAAOZ,QAAQK,OAAR,CAAgBT,QAAQ,UAAR,EAAoBgB,cAApB,EAAhB,CAAP;AACH,KAlCY;AAmCbC,qBAAiB,YAAW;AACxB,eAAOb,QAAQK,OAAR,CAAgBT,QAAQ,UAAR,EAAoBiB,eAApB,EAAhB,CAAP;AACH,KArCY;AAsCbC,SAAK,UAASC,OAAT,EAAkBC,KAAlB,EAAyB;AAC1B,YAAIC,KAAKrB,QAAQ,UAAR,CAAT;AACA,YAAG,CAACqB,GAAGJ,eAAH,GAAqBC,GAAzB,EAA8B;AAC1B,mBAAOd,QAAQC,MAAR,CAAe,eAAf,CAAP;AACH;AACD,eAAOgB,GAAGH,GAAH,CAAOC,OAAP,EAAgBC,KAAhB,CAAP;AACH;AA5CY,CAAjB","file":"fs.js","sourcesContent":["'use strict';\n\nmodule.exports = {\n    readFile: function(path, binary) {\n        return require(\"../../fs\").readFile(path, binary).\n        catch (function(err) {\n            if (err.message) {\n                return Promise.reject(err.message);\n            } else {\n                return Promise.reject(\"\" + err);\n            }\n        });\n    },\n    writeFile: function(path, text, binary) {\n        return require(\"../../fs\").writeFile(path, text, binary).catch(function(err) {\n            if (err.message) {\n                return Promise.reject(err.message);\n            } else {\n                return Promise.reject(\"\" + err);\n            }\n        });\n    },\n    listFiles: function() {\n        return Promise.resolve(require(\"../../goto\").getFileCache());\n    },\n    listFilesOfKnownFileTypes: function() {\n        return Promise.resolve(require(\"../../goto\").getFileListKnownTypes());\n    },\n    reloadFileList: function() {\n        return Promise.resolve(require(\"../../goto\").fetchFileList());\n    },\n    isConfig: function() {\n        return Promise.resolve(require('../../fs').isConfig);\n    },\n    getProjectPath: function() {\n        return Promise.resolve(require('../../fs').getProjectPath());\n    },\n    getCapabilities: function() {\n        return Promise.resolve(require(\"../../fs\").getCapabilities());\n    },\n    run: function(command, stdin) {\n        var fs = require(\"../../fs\");\n        if(!fs.getCapabilities().run) {\n            return Promise.reject(\"not-supported\");\n        }\n        return fs.run(command, stdin);\n    }\n};\n"]}