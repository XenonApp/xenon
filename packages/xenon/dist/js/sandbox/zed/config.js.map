{"version":3,"sources":["../../../../src/js/sandbox/zed/config.js"],"names":["module","exports","getPreference","preference","Promise","resolve","require","getActiveSession","getPreferences","setPreference","value","getMode","modeName","getModes","togglePreference","incrementInteger","amount","get","name","getConfiguration","reload","loadConfiguration"],"mappings":"AAAA;;AAEAA,OAAOC,OAAP,GAAiB;AACbC,mBAAe,UAASC,UAAT,EAAqB;AAChC,eAAOC,QAAQC,OAAR,CAAgBC,QAAQ,cAAR,EAAwBJ,aAAxB,CAAsCC,UAAtC,EAAkDG,QAAQ,cAAR,EAAwBC,gBAAxB,EAAlD,CAAhB,CAAP;AACH,KAHY;AAIbC,oBAAgB,YAAW;AACvB,eAAOJ,QAAQC,OAAR,CAAgBC,QAAQ,cAAR,EAAwBE,cAAxB,EAAhB,CAAP;AACH,KANY;AAObC,mBAAe,UAASN,UAAT,EAAqBO,KAArB,EAA4B;AACvC,eAAON,QAAQC,OAAR,CAAgBC,QAAQ,cAAR,EAAwBG,aAAxB,CAAsCN,UAAtC,EAAkDO,KAAlD,CAAhB,CAAP;AACH,KATY;AAUbC,aAAS,UAASC,QAAT,EAAmB;AACxB,eAAOR,QAAQC,OAAR,CAAgBC,QAAQ,cAAR,EAAwBO,QAAxB,GAAmCD,QAAnC,CAAhB,CAAP;AACH,KAZY;AAabE,sBAAkB,UAASX,UAAT,EAAqB;AACnC,eAAOC,QAAQC,OAAR,CAAgBC,QAAQ,cAAR,EAAwBQ,gBAAxB,CAAyCX,UAAzC,EAAqDG,QAAQ,cAAR,EAAwBC,gBAAxB,EAArD,CAAhB,CAAP;AACH,KAfY;AAgBbQ,sBAAkB,UAASZ,UAAT,EAAqBa,MAArB,EAA6B;AAC3C,eAAOZ,QAAQC,OAAR,CAAgBC,QAAQ,cAAR,EAAwBS,gBAAxB,CAAyCZ,UAAzC,EAAqDa,MAArD,EAA6DV,QAAQ,cAAR,EAAwBC,gBAAxB,EAA7D,CAAhB,CAAP;AACH,KAlBY;AAmBbU,SAAK,UAASC,IAAT,EAAe;AAChB,eAAOd,QAAQC,OAAR,CAAgBC,QAAQ,cAAR,EAAwBa,gBAAxB,GAA2CD,IAA3C,CAAhB,CAAP;AACH,KArBY;AAsBbE,YAAQ,YAAW;AACf,eAAOd,QAAQ,cAAR,EAAwBe,iBAAxB,EAAP;AACH;AAxBY,CAAjB","file":"config.js","sourcesContent":["'use strict';\n\nmodule.exports = {\n    getPreference: function(preference) {\n        return Promise.resolve(require(\"../../config\").getPreference(preference, require(\"../../editor\").getActiveSession()));\n    },\n    getPreferences: function() {\n        return Promise.resolve(require(\"../../config\").getPreferences());\n    },\n    setPreference: function(preference, value) {\n        return Promise.resolve(require(\"../../config\").setPreference(preference, value));\n    },\n    getMode: function(modeName) {\n        return Promise.resolve(require(\"../../config\").getModes()[modeName]);\n    },\n    togglePreference: function(preference) {\n        return Promise.resolve(require(\"../../config\").togglePreference(preference, require(\"../../editor\").getActiveSession()));\n    },\n    incrementInteger: function(preference, amount) {\n        return Promise.resolve(require(\"../../config\").incrementInteger(preference, amount, require(\"../../editor\").getActiveSession()));\n    },\n    get: function(name) {\n        return Promise.resolve(require(\"../../config\").getConfiguration()[name]);\n    },\n    reload: function() {\n        return require(\"../../config\").loadConfiguration();\n    }\n};\n"]}