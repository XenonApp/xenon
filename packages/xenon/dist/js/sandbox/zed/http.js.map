{"version":3,"sources":["../../../../src/js/sandbox/zed/http.js"],"names":["http_cache","require","request","verb","url","options","Promise","resolve","reject","args","type","headers","data","dataType","$","ajax","done","onDone","status","jqXHR","payload","convertResponseHeaders","getAllResponseHeaders","fail","onFail","source","newline","trim","split","forEach","onEntry","header","position","indexOf","key","substr","value","module","exports","fetchUrl","get","post","put","del","startServer","id","requestHandlerCommand","edit","getActiveEditor","session","command","req","res","$cmdInfo","method","path","query","body","exec","then","resp","_","each","val","name","set","send","catch","err","console","error","stopServer"],"mappings":"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","file":"http.js","sourcesContent":["'use strict';\n\nconst http_cache = require(\"../../lib/http_cache\");\n\n/**\n * A request wrapper around the jQuery AJAX function.\n *\n * options:\n *\n *     headers: {Object}\n *\n *         The HTTP headers\n *\n *     data: {Object || String} (optional)\n *\n *          The HTTP request body payload.\n *\n *     type: {String} (optional; default = \"Intelligent Guess\")\n *\n *          The type of data expected from the server.\n *\n * @param {String} verb The HTTP verb (e.g. POST, PUT, etc.)\n * @param {String} url The URL endpoint to which the request should be send.\n * @param {Object} options The jQuery request configuration.\n *\n */\nfunction request(verb, url, options) {\n    return new Promise(function(resolve, reject) {\n        var args = {};\n\n        options = options || {};\n        args.url = url;\n        args.type = verb;\n        args.headers = options.headers;\n        args.data = options.data;\n        args.dataType = options.dataType;\n\n        $.ajax(args)\n            .done(function onDone(data, status, jqXHR) {\n            var payload = [\n            data,\n            jqXHR.status,\n            convertResponseHeaders(jqXHR.getAllResponseHeaders())];\n\n            resolve(payload);\n        })\n            .fail(function onFail(jqXHR) {\n            reject(jqXHR.status)\n        });\n    });\n}\n\n/**\n * The XHR object returns a string with all response header entries in the form:\n *\n *     key: \"value\"\n *\n * This function converts this string to an object representation.\n *\n * @param {String} source The headers from the XHR object.\n *\n * @returns {Object}\n *\n */\nfunction convertResponseHeaders(source) {\n    var newline = /\\r?\\n/;\n    var headers = {};\n\n    if (!source) {\n        return headers;\n    }\n\n    source = source.trim();\n    source = source.split(newline);\n\n    source.forEach(function onEntry(header) {\n        var position = header.indexOf(':');\n        var key = header.substr(0, position);\n        var value = header.substr(position + 1).trim();\n\n        headers[key] = value;\n    });\n\n    return headers;\n}\n\nmodule.exports = {\n    fetchUrl: function(url) {\n        return http_cache.fetchUrl(url, {});\n    },\n    get: function(url, type) {\n        var options = {\n            dataType: type\n        };\n\n        return request('GET', url, options);\n    },\n    post: function(url, options) {\n        return request('POST', url, options);\n    },\n    put: function(url, options) {\n        return request('PUT', url, options);\n    },\n    del: function(url, options) {\n        return request('DELETE', url, options);\n    },\n\n    startServer: function(id, requestHandlerCommand) {\n        var edit = require(\"../../editor\").getActiveEditor();\n        var session = edit.session;\n        var command = require(\"../../command\");\n        return require(\"../../webservers\").startServer(id, function(req, res) {\n            session.$cmdInfo = {\n                request: {\n                    method: req.method,\n                    path: req.path,\n                    headers: req.headers,\n                    query: req.query,\n                    body: req.body,\n                }\n            };\n\n            // console.log(\"Calling\", requestHandlerCommand, \"to handle http\");\n            command.exec(requestHandlerCommand, edit, session).then(function(resp) {\n                // console.log(\"Got back from command\", requestHandlerCommand, resp);\n                res.status(resp.status || 200);\n                _.each(resp.headers || {}, function(val, name) {\n                    res.set(name, val);\n                });\n                res.send(resp.body || \"\");\n            }).catch(function(err) {\n                console.error(\"Something went wrong while handling request:\", err);\n            });\n        });\n    },\n\n    stopServer: function(id) {\n        return require(\"../../webservers\").stopServer(id);\n    }\n};\n"]}