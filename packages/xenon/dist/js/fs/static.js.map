{"version":3,"sources":["../../../src/js/fs/static.js"],"names":["http_cache","require","fsUtil","module","exports","options","root","url","readOnlyFn","api","listFiles","fetchUrl","then","res","items","split","i","length","splice","readFile","path","binary","Promise","resolve","reject","$","ajax","type","error","xhr","status","success","window","readOnlyFiles","uint8ArrayToBinaryString","Uint8Array","dataType","writeFile","content","deleteFile","watch","on","off","getCapabilities"],"mappings":"AAAA;;AAEA;;;;;AAIA,IAAIA,aAAaC,QAAQ,mBAAR,CAAjB;AACA,IAAIC,SAASD,QAAQ,QAAR,CAAb;;AAEAE,OAAOC,OAAP,GAAiB,UAASC,OAAT,EAAkB;AAC/B,QAAIC,OAAOD,QAAQE,GAAnB;AACA,QAAIC,aAAaH,QAAQG,UAAzB;;AAEA,QAAIC,MAAM;AACNC,mBAAW,YAAW;AAClB,mBAAOV,WAAWW,QAAX,CAAoBL,OAAO,MAA3B,EAAmC,EAAnC,EAAuCM,IAAvC,CAA4C,UAASC,GAAT,EAAc;AAC7D,oBAAIC,QAAQD,IAAIE,KAAJ,CAAU,IAAV,CAAZ;AACA,qBAAK,IAAIC,IAAI,CAAb,EAAgBA,IAAIF,MAAMG,MAA1B,EAAkCD,GAAlC,EAAuC;AACnC,wBAAI,CAACF,MAAME,CAAN,CAAL,EAAe;AACXF,8BAAMI,MAAN,CAAaF,CAAb,EAAgB,CAAhB;AACAA;AACH;AACJ;AACD,uBAAOF,KAAP;AACH,aATM,CAAP;AAUH,SAZK;AAaNK,kBAAU,UAASC,IAAT,EAAeC,MAAf,EAAuB;AAC7B,mBAAO,IAAIC,OAAJ,CAAY,UAASC,OAAT,EAAkBC,MAAlB,EAA0B;AACzCC,kBAAEC,IAAF,CAAO;AACHC,0BAAM,KADH;AAEHpB,yBAAKD,OAAOc,IAFT;AAGHQ,2BAAO,UAASC,GAAT,EAAc;AACjBL,+BAAOK,IAAIC,MAAX;AACH,qBALE;AAMHC,6BAAS,UAASlB,GAAT,EAAc;AACnB,4BAAG,CAACmB,OAAOC,aAAX,EAA0B;AACtBD,mCAAOC,aAAP,GAAuB,EAAvB;AACH;AACD,4BAAIzB,cAAcA,WAAWY,IAAX,CAAlB,EAAoC;AAChCY,mCAAOC,aAAP,CAAqBb,IAArB,IAA6B,IAA7B;AACH;AACD,4BAAGC,MAAH,EAAW;AACPR,kCAAMX,OAAOgC,wBAAP,CAAgC,IAAIC,UAAJ,CAAetB,GAAf,CAAhC,CAAN;AACH;AACDU,gCAAQV,GAAR;AACH,qBAjBE;AAkBHuB,8BAAUf,SAAS,aAAT,GAAyB;AAlBhC,iBAAP;AAoBH,aArBM,CAAP;AAsBH,SApCK;AAqCNgB,mBAAW,UAASjB,IAAT,EAAekB,OAAf,EAAwBjB,MAAxB,EAAgC;AACvC,mBAAOC,QAAQE,MAAR,CAAe,GAAf,CAAP,CADuC,CACX;AAC/B,SAvCK;AAwCNe,oBAAY,UAASnB,IAAT,EAAe;AACvB,mBAAOE,QAAQE,MAAR,CAAe,GAAf,CAAP,CADuB,CACK;AAC/B,SA1CK;AA2CNgB,eAAO,YAAW;AACd;AACH,SA7CK;AA8CNC,YAAI,YAAW;AACX;AACH,SAhDK;AAiDNC,aAAK,YAAW;AACZ;AACH,SAnDK;AAoDNC,yBAAiB,YAAW;AACxB,mBAAO,EAAP;AACH;AAtDK,KAAV;;AAyDA,WAAOlC,GAAP;AACH,CA9DD","file":"static.js","sourcesContent":["'use strict';\n\n/**\n * This module implements the read-only file system, essentially a simple\n * way to serve files from folders from within the Zed application\n */\nvar http_cache = require(\"../lib/http_cache\");\nvar fsUtil = require(\"./util\");\n\nmodule.exports = function(options) {\n    var root = options.url;\n    var readOnlyFn = options.readOnlyFn;\n\n    var api = {\n        listFiles: function() {\n            return http_cache.fetchUrl(root + \"/all\", {}).then(function(res) {\n                var items = res.split(\"\\n\");\n                for (var i = 0; i < items.length; i++) {\n                    if (!items[i]) {\n                        items.splice(i, 1);\n                        i--;\n                    }\n                }\n                return items;\n            });\n        },\n        readFile: function(path, binary) {\n            return new Promise(function(resolve, reject) {\n                $.ajax({\n                    type: \"GET\",\n                    url: root + path,\n                    error: function(xhr) {\n                        reject(xhr.status);\n                    },\n                    success: function(res) {\n                        if(!window.readOnlyFiles) {\n                            window.readOnlyFiles = {};\n                        }\n                        if (readOnlyFn && readOnlyFn(path)) {\n                            window.readOnlyFiles[path] = true;\n                        }\n                        if(binary) {\n                            res = fsUtil.uint8ArrayToBinaryString(new Uint8Array(res));\n                        }\n                        resolve(res);\n                    },\n                    dataType: binary ? \"arraybuffer\" : \"text\"\n                });\n            });\n        },\n        writeFile: function(path, content, binary) {\n            return Promise.reject(405); // Method not allowed\n        },\n        deleteFile: function(path) {\n            return Promise.reject(405); // Method not allowed\n        },\n        watch: function() {\n            // Nop\n        },\n        on: function() {\n            // Nop\n        },\n        off: function() {\n            // Nop\n        },\n        getCapabilities: function() {\n            return {};\n        }\n    };\n\n    return api;\n}\n"]}