{"version":3,"sources":["../../../src/js/fs/dropbox.js"],"names":["history","require","module","exports","options","dropbox","poll_watcher","async","rootPath","authenticate","err","dirname","path","length","substring","parts","split","slice","join","stripRoot","filename","addRoot","mkdirs","Promise","resolve","then","reject","stat","result","isRemoved","mkdir","listFiles","files","readDir","dir","callback","readdir","stringEntries","dirStat","entries","parForEach","entry","next","isFolder","push","map","readFile","fullPath","content","watcher","setCacheTag","versionTag","writeFile","lockFile","doWrite","unlockFile","catch","deleteFile","remove","getCacheTag","fs","watchFile","unwatchFile","getCapabilities","pushProject"],"mappings":"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","file":"dropbox.js","sourcesContent":["'use strict';\n\nconst history = require('../history');\n\nmodule.exports = function(options) {\n    var dropbox = require(\"lib/dropbox\");\n    var poll_watcher = require(\"./poll_watcher\");\n    var async = require(\"../lib/async\");\n    var rootPath = options.rootPath;\n\n    rootPath = rootPath || \"/\";\n    if (rootPath[0] !== \"/\") {\n        rootPath = \"/\" + rootPath;\n    }\n\n    dropbox.authenticate(function(err, dropbox) {\n        if (err) {\n            throw err;\n        }\n\n        // Copy and paste from project.js, but cannot important that due to\n        // recursive imports.\n        function dirname(path) {\n            if (path[path.length - 1] === '/') {\n                path = path.substring(0, path.length - 1);\n            }\n            var parts = path.split(\"/\");\n            return parts.slice(0, parts.length - 1).join(\"/\");\n        }\n\n        function stripRoot(filename) {\n            return filename.substring(rootPath.length);\n        }\n\n        function addRoot(filename) {\n            return rootPath + filename;\n        }\n\n        function mkdirs(path) {\n            var parts = path.split(\"/\");\n            if (parts.length === 1) {\n                return Promise.resolve();\n            } else {\n                return mkdirs(parts.slice(0, parts.length - 1).join(\"/\")).then(function() {\n                    return new Promise(function(resolve, reject) {\n                        dropbox.stat(path, function(err, result) {\n                            if (err || result.isRemoved) {\n                                dropbox.mkdir(path, function(err) {\n                                    if (err) {\n                                        return reject(err);\n                                    }\n                                    resolve();\n                                });\n                            } else {\n                                resolve();\n                            }\n                        });\n                    });\n                });\n            }\n        }\n\n        function listFiles() {\n            var files = [];\n            return new Promise(function(resolve, reject) {\n                function readDir(dir, callback) {\n                    dropbox.readdir(dir, function(err, stringEntries, dirStat, entries) {\n                        if (err) {\n                            return callback(err);\n                        }\n                        async.parForEach(entries, function(entry, next) {\n                            // if (entry.name[0] === \".\") {\n                            //     return next();\n                            // }\n                            if (entry.isFolder) {\n                                readDir(entry.path, next);\n                            } else {\n                                files.push(entry.path);\n                                next();\n                            }\n                        }, callback);\n                    });\n                }\n                readDir(rootPath, function(err) {\n                    if (err) {\n                        return reject(err);\n                    }\n                    resolve(files.map(stripRoot));\n                });\n            });\n\n        }\n\n        function readFile(path) {\n            var fullPath = addRoot(path);\n            return new Promise(function(resolve, reject) {\n                dropbox.readFile(fullPath, function(err, content, stat) {\n                    if (err) {\n                        return reject(err);\n                    }\n                    watcher.setCacheTag(path, stat.versionTag);\n                    resolve(content);\n                });\n            });\n        }\n\n        function writeFile(path, content, callback) {\n            watcher.lockFile(path);\n            var fullPath = addRoot(path);\n\n            function doWrite() {\n                return new Promise(function(resolve, reject) {\n                    dropbox.writeFile(fullPath, content, function(err, stat) {\n                        if (err) {\n                            watcher.unlockFile(path);\n                            return reject(err);\n                        }\n                        watcher.setCacheTag(path, stat.versionTag);\n                        watcher.unlockFile(path);\n                        resolve();\n                    });\n                });\n            }\n\n            return doWrite().then(function() {\n                watcher.unlockFile(path);\n            }, function(err) {\n                // Presumably directory did not yet exist\n                return mkdirs(dirname(fullPath)).then(doWrite);\n            }).\n            catch (function(err) {\n                watcher.unlockFile(path);\n            });\n        }\n\n        function deleteFile(path, callback) {\n            var fullPath = addRoot(path);\n            return new Promise(function(resolve, reject) {\n                dropbox.remove(fullPath, function(err) {\n                    if(err) {\n                        reject(err);\n                    } else {\n                        resolve();\n                    }\n                });\n            });\n        }\n\n        function getCacheTag(path, callback) {\n            var fullPath = addRoot(path);\n            return new Promise(function(resolve, reject) {\n                dropbox.stat(fullPath, function(err, stat) {\n                    if (err) {\n                        return reject(err);\n                    }\n                    if (stat.isRemoved) {\n                        return reject(404);\n                    } else {\n                        resolve(stat.versionTag);\n                    }\n                });\n            });\n        }\n\n        var fs = {\n            listFiles: listFiles,\n            readFile: readFile,\n            writeFile: writeFile,\n            deleteFile: deleteFile,\n            watchFile: function(path, callback) {\n                watcher.watchFile(path, callback);\n            },\n            unwatchFile: function(path, callback) {\n                watcher.unwatchFile(path, callback);\n            },\n            getCacheTag: getCacheTag,\n            getCapabilities: function() {\n                return {};\n            }\n        };\n\n        var watcher = poll_watcher(fs, 10000);\n\n        history.pushProject(rootPath.slice(1), \"dropbox:\" + rootPath);\n\n        return fs;\n    });\n};\n"]}