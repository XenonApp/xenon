{"version":3,"sources":["../../../src/js/fs/union.js"],"names":["module","exports","options","fileSystems","attempt","fnName","args","index","attemptOne","apply","catch","err","length","Promise","reject","api","listFiles","files","all","map","fs","then","files_","forEach","filename","indexOf","push","console","error","on","event","listener","off","readFile","path","binary","d","watch","ignored","writeFile","content","deleteFile","getCapabilities"],"mappings":"AAAA;;AAEA;;;;;AAIAA,OAAOC,OAAP,GAAiB,UAASC,OAAT,EAAkB;AAC/B,QAAIC,cAAcD,QAAQC,WAA1B;;AAEA,aAASC,OAAT,CAAiBC,MAAjB,EAAyBC,IAAzB,EAA+B;AAC3B,YAAIC,QAAQ,CAAZ;;AAEA,iBAASC,UAAT,GAAsB;AAClB,mBAAOL,YAAYI,KAAZ,EAAmBF,MAAnB,EAA2BI,KAA3B,CAAiCN,YAAYI,KAAZ,CAAjC,EAAqDD,IAArD,EAA2DI,KAA3D,CAAiE,UAASC,GAAT,EAAc;AAClFJ;AACA,oBAAIA,SAASJ,YAAYS,MAAzB,EAAiC;AAC7B,2BAAOC,QAAQC,MAAR,CAAeH,GAAf,CAAP;AACH,iBAFD,MAEO;AACH,2BAAOH,YAAP;AACH;AACJ,aAPM,CAAP;AAQH;AACD,eAAOA,YAAP;AACH;;AAGD,QAAIO,MAAM;AACNC,mBAAW,YAAW;AAClB,gBAAIC,QAAQ,EAAZ;AACA,mBAAOJ,QAAQK,GAAR,CAAYf,YAAYgB,GAAZ,CAAgB,UAASC,EAAT,EAAa;AAC5C,uBAAOA,GAAGJ,SAAH,GAAeK,IAAf,CAAoB,UAASC,MAAT,EAAiB;AACxCA,2BAAOC,OAAP,CAAe,UAASC,QAAT,EAAmB;AAC9B,4BAAIP,MAAMQ,OAAN,CAAcD,QAAd,MAA4B,CAAC,CAAjC,EAAoC;AAChCP,kCAAMS,IAAN,CAAWF,QAAX;AACH;AACJ,qBAJD;AAKH,iBANM,EAMJ,UAASb,GAAT,EAAc;AACbgB,4BAAQC,KAAR,CAAc,2BAAd,EAA2CR,EAA3C,EAA+CT,GAA/C;AACH,iBARM,CAAP;AASH,aAVkB,CAAZ,EAUHU,IAVG,CAUE,YAAW;AAChB,uBAAOJ,KAAP;AACH,aAZM,CAAP;AAaH,SAhBK;AAiBNY,YAAI,UAASC,KAAT,EAAgBC,QAAhB,EAA0B;AAC1B5B,wBAAYoB,OAAZ,CAAoBH,MAAMA,GAAGS,EAAH,CAAMC,KAAN,EAAaC,QAAb,CAA1B;AACH,SAnBK;AAoBNC,aAAK,UAASF,KAAT,EAAgBC,QAAhB,EAA0B;AAC3B5B,wBAAYoB,OAAZ,CAAoBH,MAAMA,GAAGY,GAAH,CAAOF,KAAP,EAAcC,QAAd,CAA1B;AACH,SAtBK;AAuBNE,kBAAU,UAASC,IAAT,EAAeC,MAAf,EAAuB;AAC7B,mBAAO/B,QAAQ,UAAR,EAAoB,CAAC8B,IAAD,EAAOC,MAAP,CAApB,EAAoCd,IAApC,CAAyC,UAASe,CAAT,EAAY;AACxD,uBAAOA,CAAP;AACH,aAFM,CAAP;AAGH,SA3BK;AA4BNC,eAAO,UAASC,OAAT,EAAkB;AACrBnC,wBAAYoB,OAAZ,CAAoBH,MAAMA,GAAGiB,KAAH,CAASC,OAAT,CAA1B;AACH,SA9BK;AA+BNC,mBAAW,UAASL,IAAT,EAAeM,OAAf,EAAwBL,MAAxB,EAAgC;AACvC,mBAAO/B,QAAQ,WAAR,EAAqB,CAAC8B,IAAD,EAAOM,OAAP,EAAgBL,MAAhB,CAArB,CAAP;AACH,SAjCK;AAkCNM,oBAAY,UAASP,IAAT,EAAe;AACvB,mBAAO9B,QAAQ,YAAR,EAAsB,CAAC8B,IAAD,CAAtB,CAAP;AACH,SApCK;AAqCNQ,yBAAiB,YAAW;AACxB,mBAAO,EAAP;AACH;AAvCK,KAAV;;AA0CA,WAAO3B,GAAP;AACH,CA/DD","file":"union.js","sourcesContent":["'use strict';\n\n/**\n * This module implements a union fs, it will do fall-through for various operations\n * such as reads and writes, attempting them one by one until one succeeds.\n */\nmodule.exports = function(options) {\n    var fileSystems = options.fileSystems;\n    \n    function attempt(fnName, args) {\n        var index = 0;\n    \n        function attemptOne() {\n            return fileSystems[index][fnName].apply(fileSystems[index], args).catch(function(err) {\n                index++;\n                if (index >= fileSystems.length) {\n                    return Promise.reject(err);\n                } else {\n                    return attemptOne();\n                }\n            });\n        }\n        return attemptOne();\n    }\n    \n    \n    var api = {\n        listFiles: function() {\n            var files = [];\n            return Promise.all(fileSystems.map(function(fs) {\n                return fs.listFiles().then(function(files_) {\n                    files_.forEach(function(filename) {\n                        if (files.indexOf(filename) === -1) {\n                            files.push(filename);\n                        }\n                    });\n                }, function(err) {\n                    console.error(\"Got error from filesystem\", fs, err);\n                });\n            })).then(function() {\n                return files;\n            });\n        },\n        on: function(event, listener) {\n            fileSystems.forEach(fs => fs.on(event, listener));\n        },\n        off: function(event, listener) {\n            fileSystems.forEach(fs => fs.off(event, listener));\n        },\n        readFile: function(path, binary) {\n            return attempt(\"readFile\", [path, binary]).then(function(d) {\n                return d;\n            });\n        },\n        watch: function(ignored) {\n            fileSystems.forEach(fs => fs.watch(ignored));\n        },\n        writeFile: function(path, content, binary) {\n            return attempt(\"writeFile\", [path, content, binary]);\n        },\n        deleteFile: function(path) {\n            return attempt(\"deleteFile\", [path]);\n        },\n        getCapabilities: function() {\n            return {};\n        }\n    };\n    \n    return api;\n};\n"]}