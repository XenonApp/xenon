{"version":3,"sources":["../../../src/js/fs/config.js"],"names":["cache","require","app","fs","WEBPACK","remote","path","module","exports","options","watchSelf","staticFs","url","join","__dirname","readOnlyFn","mainFs","configHome","get","Error","keep","localStorage","configDir","getPath","console","log","existsSync","mkdirSync","dir","dontRegister","fileSystems"],"mappings":"AAAA;;AACA,MAAMA,QAAQC,QAAQ,UAAR,CAAd;;AAEA,IAAIC,GAAJ,EAASC,EAAT;AACA,IAAI,CAACC,OAAL,EAAc;AACVF,UAAMD,QAAQ,UAAR,EAAoBI,MAApB,CAA2BH,GAAjC;AACAC,SAAKF,QAAQ,IAAR,CAAL;AACH;AACD,MAAMK,OAAOL,QAAQ,MAAR,CAAb;;AAEAM,OAAOC,OAAP,GAAiB,UAASC,OAAT,EAAkB;AAC/B,QAAIC,YAAYD,QAAQC,SAAxB;;AAEA,UAAMC,WAAWV,QAAQ,UAAR,EAAoB;AACjCW,aAAKN,KAAKO,IAAL,CAAUC,SAAV,EAAqB,IAArB,EAA2B,IAA3B,EAAiC,QAAjC,CAD4B;AAEjCC,oBAAY,UAAST,IAAT,EAAe;AACvB,mBAAOA,SAAS,YAAT,IAAyBA,SAAS,YAAlC,IAAkDA,SAAS,WAAlE;AACH;AAJgC,KAApB,CAAjB;;AAOA,QAAIU,MAAJ;AACA,QAAIZ,OAAJ,EAAgB;AACZ,cAAMa,aAAajB,MAAMkB,GAAN,CAAU,WAAV,CAAnB;AACA,cAAMN,MAAMZ,MAAMkB,GAAN,CAAU,YAAV,EAAwBN,GAApC;AACA,YAAI,CAACK,UAAD,IAAe,CAACL,GAApB,EAAyB;AACrB,kBAAM,IAAIO,KAAJ,CAAU,+CAAV,CAAN;AACH;;AAEDH,iBAASf,QAAQ,OAAR,EAAiB;AACtBW,iBAAM,GAAEA,GAAI,IAAGK,UAAW,EADJ;AAEtBG,kBAAM;AAFgB,SAAjB,CAAT;AAIH,KAXD,MAWO;AACH,cAAMH,aAAaI,aAAaC,SAAb,IAA0BhB,KAAKO,IAAL,CAAUX,IAAIqB,OAAJ,CAAY,UAAZ,CAAV,EAAmC,QAAnC,CAA7C;AACAC,gBAAQC,GAAR,CAAY,aAAZ,EAA2BR,UAA3B;AACA,YAAI,CAACd,GAAGuB,UAAH,CAAcT,UAAd,CAAL,EAAgC;AAC5Bd,eAAGwB,SAAH,CAAaV,UAAb;AACH;AACDD,iBAASf,QAAQ,QAAR,EAAkB;AACvB2B,iBAAKX,UADkB;AAEvBY,0BAAc;AAFS,SAAlB,CAAT;AAIH;;AAED,WAAO5B,QAAQ,SAAR,EAAmB;AACtB6B,qBAAa,CAACd,MAAD,EAASL,QAAT,CADS;AAEtBD,mBAAWA;AAFW,KAAnB,CAAP;AAIH,CAtCD","file":"config.js","sourcesContent":["'use strict';\nconst cache = require('../cache');\n\nlet app, fs;\nif (!WEBPACK) {\n    app = require('electron').remote.app;\n    fs = require(\"fs\");\n}\nconst path = require('path');\n\nmodule.exports = function(options) {\n    var watchSelf = options.watchSelf;\n\n    const staticFs = require('./static')({\n        url: path.join(__dirname, '..', '..', \"config\"),\n        readOnlyFn: function(path) {\n            return path !== \"/.zedstate\" && path !== \"/user.json\" && path !== \"/user.css\";\n        }\n    });\n\n    let mainFs;\n    if (WEBPACK)    {\n        const configHome = cache.get('configDir');\n        const url = cache.get('xeddConfig').url;\n        if (!configHome || !url) {\n            throw new Error('Config directory should be configured already');\n        }\n\n        mainFs = require('./web')({\n            url: `${url}/${configHome}`,\n            keep: false\n        });\n    } else {\n        const configHome = localStorage.configDir || path.join(app.getPath('userData'), 'config');\n        console.log(\"Config home\", configHome);\n        if (!fs.existsSync(configHome)) {\n            fs.mkdirSync(configHome);\n        }\n        mainFs = require('./node')({\n            dir: configHome,\n            dontRegister: true\n        });\n    }\n\n    return require('./union')({\n        fileSystems: [mainFs, staticFs],\n        watchSelf: watchSelf,\n    });\n};\n"]}