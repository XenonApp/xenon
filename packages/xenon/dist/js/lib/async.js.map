{"version":3,"sources":["../../../src/js/lib/async.js"],"names":["module","exports","forEach","array","fn","callback","slice","reverse","processOne","item","pop","result","err","length","parForEach","completed","arLength","i","waitForEvents","emitter","events","eventsLeft","eventArgs","event","once","args","Array","prototype","call","arguments","checkDone","queueUntilEvent","eventName","alreadyEmitted","apply","Promise","resolve"],"mappings":"AAAA;;AACAA,OAAOC,OAAP,GAAiB;AACb;;;;;;;;AAQAC,aAAS,UAASC,KAAT,EAAgBC,EAAhB,EAAoBC,QAApB,EAA8B;AACnCF,gBAAQA,MAAMG,KAAN,CAAY,CAAZ,EAAeC,OAAf,EAAR,CADmC,CACD;AAClC,iBAASC,UAAT,GAAsB;AAClB,gBAAIC,OAAON,MAAMO,GAAN,EAAX;AACAN,eAAGK,IAAH,EAAS,UAASE,MAAT,EAAiBC,GAAjB,EAAsB;AAC3B,oBAAIT,MAAMU,MAAN,GAAe,CAAnB,EAAsB;AAClBL;AACH,iBAFD,MAEO;AACHH,6BAASM,MAAT,EAAiBC,GAAjB;AACH;AACJ,aAND;AAOH;AACD,YAAIT,MAAMU,MAAN,GAAe,CAAnB,EAAsB;AAClBL;AACH,SAFD,MAEO;AACHH;AACH;AACJ,KA1BY;;AA4Bb;;;;;;;;AAQAS,gBAAY,UAASX,KAAT,EAAgBC,EAAhB,EAAoBC,QAApB,EAA8B;AACtC,YAAIU,YAAY,CAAhB;AACA,YAAIC,WAAWb,MAAMU,MAArB;AACA,YAAIG,aAAa,CAAjB,EAAoB;AAChBX;AACH;AACD,aAAK,IAAIY,IAAI,CAAb,EAAgBA,IAAID,QAApB,EAA8BC,GAA9B,EAAmC;AAC/Bb,eAAGD,MAAMc,CAAN,CAAH,EAAa,UAASN,MAAT,EAAiBC,GAAjB,EAAsB;AAC/BG;AACA,oBAAIA,cAAcC,QAAlB,EAA4B;AACxBX,6BAASM,MAAT,EAAiBC,GAAjB;AACH;AACJ,aALD;AAMH;AACJ,KAlDY;;AAoDbM,mBAAe,UAASC,OAAT,EAAkBC,MAAlB,EAA0Bf,QAA1B,EAAoC;AAC/C,YAAIgB,aAAaD,OAAOP,MAAxB;AACA,YAAIS,YAAY,EAAhB;;AAEAF,eAAOlB,OAAP,CAAe,UAASqB,KAAT,EAAgB;AAC3BJ,oBAAQK,IAAR,CAAaD,KAAb,EAAoB,YAAW;AAC3B,oBAAIE,OAAOC,MAAMC,SAAN,CAAgBrB,KAAhB,CAAsBsB,IAAtB,CAA2BC,SAA3B,CAAX;AACAP,0BAAUC,KAAV,IAAmBE,IAAnB;AACAJ;AACAS;AACH,aALD;AAMH,SAPD;AAQAA;;AAEA,iBAASA,SAAT,GAAqB;AACjB,gBAAIT,eAAe,CAAnB,EAAsB;AAClBhB,yBAASiB,SAAT;AACH;AACJ;AACJ,KAvEY;;AAyEbS,qBAAiB,UAASZ,OAAT,EAAkBa,SAAlB,EAA6B5B,EAA7B,EAAiC;AAC9Ce,gBAAQK,IAAR,CAAaQ,SAAb,EAAwB,YAAW;AAC/B5B,eAAG6B,cAAH,GAAoB,IAApB;AACH,SAFD;AAGA,eAAO,YAAW;AACd,gBAAIR,OAAOC,MAAMC,SAAN,CAAgBrB,KAAhB,CAAsBsB,IAAtB,CAA2BC,SAA3B,CAAX;AACA,gBAAIzB,GAAG6B,cAAP,EAAuB;AACnB,uBAAO7B,GAAG8B,KAAH,CAAS,IAAT,EAAeT,IAAf,CAAP;AACH,aAFD,MAEO;AACH,uBAAO,IAAIU,OAAJ,CAAY,UAASC,OAAT,EAAkB;AACjCjB,4BAAQK,IAAR,CAAaQ,SAAb,EAAwB,YAAW;AAC/BI,gCAAQhC,GAAG8B,KAAH,CAAS,IAAT,EAAeT,IAAf,CAAR;AACH,qBAFD;AAGH,iBAJM,CAAP;AAKH;AACJ,SAXD;AAYH;AAzFY,CAAjB","file":"async.js","sourcesContent":["'use strict';\nmodule.exports = {\n    /**\n     * asynchronous sequential version of Array.prototype.forEach\n     * @param array the array to iterate over\n     * @param fn the function to apply to each item in the array, function\n     *        has two argument, the first is the item value, the second a\n     *        callback function\n     * @param callback the function to call when the forEach has ended\n     */\n    forEach: function(array, fn, callback) {\n        array = array.slice(0).reverse(); // Just to be sure\n        function processOne() {\n            var item = array.pop();\n            fn(item, function(result, err) {\n                if (array.length > 0) {\n                    processOne();\n                } else {\n                    callback(result, err);\n                }\n            });\n        }\n        if (array.length > 0) {\n            processOne();\n        } else {\n            callback();\n        }\n    },\n\n    /**\n     * asynchronous parallel version of Array.prototype.forEach\n     * @param array the array to iterate over\n     * @param fn the function to apply to each item in the array, function\n     *        has two argument, the first is the item value, the second a\n     *        callback function\n     * @param callback the function to call when the forEach has ended\n     */\n    parForEach: function(array, fn, callback) {\n        var completed = 0;\n        var arLength = array.length;\n        if (arLength === 0) {\n            callback();\n        }\n        for (var i = 0; i < arLength; i++) {\n            fn(array[i], function(result, err) {\n                completed++;\n                if (completed === arLength) {\n                    callback(result, err);\n                }\n            });\n        }\n    },\n\n    waitForEvents: function(emitter, events, callback) {\n        var eventsLeft = events.length;\n        var eventArgs = {};\n\n        events.forEach(function(event) {\n            emitter.once(event, function() {\n                var args = Array.prototype.slice.call(arguments);\n                eventArgs[event] = args;\n                eventsLeft--;\n                checkDone();\n            });\n        });\n        checkDone();\n\n        function checkDone() {\n            if (eventsLeft === 0) {\n                callback(eventArgs);\n            }\n        }\n    },\n\n    queueUntilEvent: function(emitter, eventName, fn) {\n        emitter.once(eventName, function() {\n            fn.alreadyEmitted = true;\n        });\n        return function() {\n            var args = Array.prototype.slice.call(arguments);\n            if (fn.alreadyEmitted) {\n                return fn.apply(null, args);\n            } else {\n                return new Promise(function(resolve) {\n                    emitter.once(eventName, function() {\n                        resolve(fn.apply(null, args));\n                    });\n                });\n            }\n        };\n    }\n};\n"]}