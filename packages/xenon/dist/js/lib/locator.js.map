{"version":3,"sources":["../../../src/js/lib/locator.js"],"names":["module","exports","parse","path","parts","split","length","slice","join","jump","locator","selectionRange","selectedItem","edit","require","getActiveEditor","caseSensitive","find","substring","start","getSelectionRange","wrap","wholeWord","lineNo","parseInt","isNaN","gotoLine"],"mappings":"AAAA;;AAEAA,OAAOC,OAAP,CAAeC,KAAf,GAAuB,UAASC,IAAT,EAAe;AAClC,QAAIC,QAAQD,KAAKE,KAAL,CAAW,GAAX,CAAZ;AACA,QAAID,MAAME,MAAN,KAAiB,CAArB,EAAwB;AACpB,eAAOF,KAAP;AACH,KAFD,MAEO,IAAIA,MAAME,MAAN,GAAe,CAAf,IAAoB,CAACF,MAAM,CAAN,CAAzB,EAAmC;AAAE;AACxC,eAAO,CAACD,IAAD,CAAP;AACH,KAFM,MAEA;AACH,eAAO,CAACC,MAAM,CAAN,CAAD,EAAWA,MAAMG,KAAN,CAAY,CAAZ,EAAeC,IAAf,CAAoB,GAApB,CAAX,CAAP;AACH;AACJ,CATD;;AAWAR,OAAOC,OAAP,CAAeQ,IAAf,GAAsB,UAASC,OAAT,EAAkBC,cAAlB,EAAkCC,YAAlC,EAAgD;AAClE,QAAIC,OAAOC,QAAQ,WAAR,EAAqBC,eAArB,EAAX;AACA,QAAIL,QAAQ,CAAR,MAAe,GAAf,IAAsBA,QAAQ,CAAR,MAAe,GAAzC,EAA8C;AAC1C,YAAIM,gBAAgBN,QAAQ,CAAR,MAAe,GAAnC;AACAG,aAAKI,IAAL,CAAUP,QAAQQ,SAAR,CAAkB,CAAlB,CAAV,EAAgC;AAC5BC,mBAAOR,kBAAkBE,KAAKO,iBAAL,EADG;AAE5BC,kBAAM,IAFsB;AAG5BL,2BAAeA,aAHa;AAI5BM,uBAAW;AAJiB,SAAhC;AAMH,KARD,MAQO,IAAIZ,QAAQ,CAAR,MAAe,GAAf,IAAsBE,YAA1B,EAAwC;AAC3C,YAAIR,QAAQQ,aAAaP,KAAb,CAAmB,GAAnB,CAAZ;AACA,eAAOJ,QAAQQ,IAAR,CAAaL,MAAM,CAAN,CAAb,EAAuBO,cAAvB,CAAP;AACH,KAHM,MAGA;AACH,YAAIY,SAASC,SAASd,OAAT,EAAkB,EAAlB,CAAb;AACA,YAAI,CAACe,MAAMF,MAAN,CAAL,EAAoB;AAChBV,iBAAKa,QAAL,CAAcH,MAAd;AACH;AACJ;AACJ,CAnBD","file":"locator.js","sourcesContent":["\"use strict\";\n\nmodule.exports.parse = function(path) {\n    var parts = path.split(':');\n    if (parts.length === 1) {\n        return parts;\n    } else if (parts.length > 2 && !parts[1]) { // zed::bla\n        return [path];\n    } else {\n        return [parts[0], parts.slice(1).join(\":\")];\n    }\n};\n\nmodule.exports.jump = function(locator, selectionRange, selectedItem) {\n    var edit = require(\"../editor\").getActiveEditor();\n    if (locator[0] === \"/\" || locator[0] === \"|\") {\n        var caseSensitive = locator[0] === \"/\";\n        edit.find(locator.substring(1), {\n            start: selectionRange || edit.getSelectionRange(),\n            wrap: true,\n            caseSensitive: caseSensitive,\n            wholeWord: false\n        });\n    } else if (locator[0] === '@' && selectedItem) {\n        var parts = selectedItem.split(\":\");\n        return exports.jump(parts[1], selectionRange);\n    } else {\n        var lineNo = parseInt(locator, 10);\n        if (!isNaN(lineNo)) {\n            edit.gotoLine(lineNo);\n        }\n    }\n};\n"]}