{"version":3,"sources":["../../../src/js/lib/events.js"],"names":["defaultMaxListeners","EventEmitter","constructor","checked","_events","_checked","setMaxListeners","n","maxListeners","declare","type","emit","handler","Error","args","Array","prototype","slice","call","arguments","listeners","i","l","length","apply","e","console","error","message","stack","addListener","listener","warned","m","undefined","trace","push","on","once","self","g","removeListener","list","indexOf","splice","removeAllListeners","module","exports"],"mappings":"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","file":"events.js","sourcesContent":["const defaultMaxListeners = 25;\n\nclass EventEmitter {\n    constructor(checked) {\n        this._events = {};\n        this._checked = checked;\n    }\n    \n    setMaxListeners(n) {\n        this._events.maxListeners = n;\n    }\n    \n    declare(type) {\n        this._events[type] = [];\n    }\n    \n    emit(type) {\n        // console.log(\"Emitting\", type);\n        var handler = this._events[type];\n    \n        if (!handler && this._checked) throw Error(\"Event not declared: \" + type);\n        else if (!handler) handler = this._events[type] = [];\n    \n        var args = Array.prototype.slice.call(arguments, 1);\n    \n        var listeners = handler.slice();\n        try {\n            for (var i = 0, l = listeners.length; i < l; i++) {\n                listeners[i].apply(this, args);\n            }\n        } catch (e) {\n            console.error(\"Error while emitting\", type, e.message, e.stack);\n            throw e;\n        }\n        return listeners.length > 0;\n    }\n    \n    addListener(type, listener) {\n        if ('function' !== typeof listener) {\n            throw new Error('addListener only takes instances of Function');\n        }\n    \n        if (!this._events[type] && this._checked) {\n            // Optimize the case of one listener. Don't need the extra array object.\n            throw new Error(\"Event not declared: \" + type);\n        } else if (!this._events[type]) {\n            this._events[type] = [];\n        }\n        // Check for listener leak\n        if (!this._events[type].warned) {\n            var m;\n            if (this._events.maxListeners !== undefined) {\n                m = this._events.maxListeners;\n            } else {\n                m = defaultMaxListeners;\n            }\n    \n            if (m && m > 0 && this._events[type].length > m) {\n                this._events[type].warned = true;\n                console.error('(node) warning: possible EventEmitter memory ' +\n                    'leak detected. %d listeners added. ' +\n                    'Use emitter.setMaxListeners() to increase limit.',\n                this._events[type].length);\n                console.trace();\n            }\n        }\n    \n        // If we've already got an array, just append.\n        this._events[type].push(listener);\n    \n        return this;\n    }\n    \n    on(type, listener) {\n        return this.addListener(type, listener);\n    }\n    \n    once(type, listener) {\n        var self = this;\n        self.on(type, function g() {\n            self.removeListener(type, g);\n            listener.apply(this, arguments);\n        });\n    \n        return this;\n    }\n    \n    removeListener(type, listener) {\n        if ('function' !== typeof listener) {\n            throw new Error('removeListener only takes instances of Function');\n        }\n    \n        // does not use listeners(), so no side effect of creating _events[type]\n        if (!this._events || !this._events[type]) return this;\n    \n        var list = this._events[type];\n    \n        var i = list.indexOf(listener);\n        if (i < 0) return this;\n        list.splice(i, 1);\n        return this;\n    }\n    \n    removeAllListeners(type) {\n        if (type && this._events && this._events[type]) this._events[type] = [];\n        return this;\n    }\n    \n    listeners(type) {\n        return this._events[type];\n    }\n}\n\nmodule.exports = {\n    EventEmitter\n};\n\n\n"]}