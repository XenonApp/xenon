{"version":3,"sources":["../../src/js/theme.js"],"names":["config","require","command","eventbus","configfs","win","useragent","global","ace","defaultEditorTheme","defaultWindowTheme","editorThemeFiles","windowThemeFiles","api","hook","on","editorTheme","getPreference","windowTheme","Promise","all","setEditorTheme","setWindowTheme","loadUserCss","then","refreshScrollBars","allEditorThemes","getEditorThemes","_","each","theme","name","defineConfig","doc","exec","setPreference","readOnly","allWindowThemes","getWindowThemes","path","indexOf","reloadEditorTheme","reloadWindowTheme","reloadUserCss","getEditorTheme","nativeScrollBars","customScroll","loadEditorCss","css","$","attr","cssClass","dark","useNativeFrame","isMac","getTheme","cssFiles","watch","cssCode","map","file","push","readFile","cssCode_","html","getWindowTheme","loadWindowCss","height","err","console","error","define","edit","session","module","exports"],"mappings":"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","file":"theme.js","sourcesContent":["'use strict';\n\nconst config = require('./config');\nconst command = require('./command');\nconst eventbus = require('./eventbus');\nconst configfs = require('./configfs');\nconst win = require('./window');\n\nvar useragent = global.ace.require(\"ace/lib/useragent\");\n\nvar defaultEditorTheme = 'zed_dark';\nvar defaultWindowTheme = 'zed_dark';\n\n// reload theme when any of these files change\nvar editorThemeFiles = [];\nvar windowThemeFiles = [];\n\nvar api = {\n    hook: function() {\n        eventbus.on(\"configchanged\", function(config) {\n            var editorTheme = config.getPreference(\"editorTheme\");\n            var windowTheme = config.getPreference(\"windowTheme\");\n            Promise.all([\n                setEditorTheme(editorTheme),\n                setWindowTheme(windowTheme),\n                loadUserCss()\n            ]).then(function() {\n                refreshScrollBars();\n            });\n        });\n\n        eventbus.on(\"configcommandsreset\", function(config) {\n            var allEditorThemes = config.getEditorThemes();\n            _.each(allEditorThemes, function(theme, name) {\n                command.defineConfig(\"Configuration:Editor Theme:\" + theme.name, {\n                    doc: \"Activate this editor theme. Change will take effect \" +\n                    \"immediately, and also persist in Zed's configuration file.\",\n                    exec: function() {\n                        config.setPreference(\"editorTheme\", name);\n                        setEditorTheme(name).then(function() {\n                            refreshScrollBars();\n                        });\n                    },\n                    readOnly: true\n                });\n            });\n            \n            var allWindowThemes = config.getWindowThemes();\n            _.each(allWindowThemes, function(theme, name) {\n                command.defineConfig(\"Configuration:Window Theme:\" + theme.name, {\n                    doc: \"Activate this window theme. Change will take effect \" +\n                    \"immediately, and also persist in Zed's configuration file.\",\n                    exec: function() {\n                        config.setPreference(\"windowTheme\", name);\n                        setWindowTheme(name).then(function() {\n                            refreshScrollBars();\n                        });\n                    },\n                    readOnly: true\n                });\n            });\n        });\n        \n        configfs.on('change', (path) => {\n            if (editorThemeFiles.indexOf(path) > -1) {\n                reloadEditorTheme();\n            }\n            \n            if (windowThemeFiles.indexOf(path) > -1) {\n                reloadWindowTheme();\n            }\n            \n            if (path === '/user.css') {\n                reloadUserCss();\n            }\n        });\n    }\n};\n\nfunction setEditorTheme(name) {\n    editorThemeFiles = [];\n    var theme = config.getEditorTheme(name) || config.getEditorTheme(defaultEditorTheme);\n    var nativeScrollBars = config.getPreference(\"nativeScrollBars\");\n    var customScroll = '';\n    if (!nativeScrollBars) {\n        customScroll = ' custom-scroll';\n    }\n\n    return loadEditorCss(theme.css, true).then(function() {\n        $(\"body\").attr(\"class\", theme.cssClass + (theme.dark ? \" dark ace_dark\" : \" \") + (win.useNativeFrame() ? \" native-chrome\" : \" \") + (!useragent.isMac ? \" non_mac\" : \" mac\") + customScroll);\n    });\n}\n\nfunction reloadEditorTheme() {\n    var theme = config.getTheme(config.getPreference(\"editorTheme\"));\n    loadEditorCss(theme.css).then(function() {\n        refreshScrollBars();\n    });\n}\n\nfunction loadEditorCss(cssFiles, watch) {\n    var cssCode = \"\";\n    return Promise.all(cssFiles.map(function(file) {\n        if (watch) {\n            editorThemeFiles.push(file);\n        }\n        return configfs.readFile(file).then(function(cssCode_) {\n            cssCode += cssCode_ + \"\\n\";\n        });\n    })).then(function() {\n        $('#editor-theme-css').html(cssCode);\n    });\n}\n\nfunction setWindowTheme(name) {\n    windowThemeFiles = [];\n    var theme = config.getWindowTheme(name) || config.getWindowTheme(defaultWindowTheme);\n\n    return loadWindowCss(theme.css, true);\n}\n\nfunction reloadWindowTheme() {\n    var theme = config.getTheme(config.getPreference(\"windowTheme\"));\n    loadWindowCss(theme.css).then(function() {\n        refreshScrollBars();\n    });\n}\n\nfunction loadWindowCss(cssFiles, watch) {\n    var cssCode = \"\";\n    return Promise.all(cssFiles.map(function(file) {\n        if (watch) {\n            windowThemeFiles.push(file);\n        }\n        return configfs.readFile(file).then(function(cssCode_) {\n            cssCode += cssCode_ + \"\\n\";\n        });\n    })).then(function() {\n        $('#window-theme-css').html(cssCode);\n    });\n}\n\nfunction refreshScrollBars() {\n    // hack to force scrollbars to refresh\n    // found here: http://stackoverflow.com/a/15603340\n    $('.ace_scrollbar-v').css('overflow-y', 'hidden').height();\n    $('.ace_scrollbar-v').css('overflow-y', 'scroll');\n    $('.ace_scrollbar-h').css('overflow-x', 'hidden').height();\n    $('.ace_scrollbar-h').css('overflow-x', 'scroll');\n}\n\nfunction reloadUserCss() {\n    loadUserCss().then(function() {\n        refreshScrollBars();\n    });\n}\n\nfunction loadUserCss() {\n    return configfs.readFile(\"/user.css\").then(function(cssCode) {\n        $(\"#user-css\").html(cssCode);\n    }, function(err) {\n        console.error(\"Error loading user css\", err);\n    });\n}\n\ncommand.define(\"Configuration:Preferences:Pick Editor Theme\", {\n    exec: function(edit, session) {\n        return command.exec(\"Command:Enter Command\", edit, session, \"Configuration:Editor Theme:\");\n    },\n    readOnly: true\n});\n\ncommand.define(\"Configuration:Preferences:Pick Window Theme\", {\n    exec: function(edit, session) {\n        return command.exec(\"Command:Enter Command\", edit, session, \"Configuration:Window Theme:\");\n    },\n    readOnly: true\n});\n\nmodule.exports = api;\n"]}