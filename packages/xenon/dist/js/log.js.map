{"version":3,"sources":["../../src/js/log.js"],"names":["session_manager","require","oldLog","console","log","oldWarn","warn","oldError","info","oldInfo","noop","window","error","onerror","err","message","stack","level","oldFn","apply","arguments","session","specialDocs","insert","row","getLength","column","toLogEntry","args","s","_","each","arg","isString","JSON5","stringify","e"],"mappings":"AAAA;;AAEA;;AACA,MAAMA,kBAAkBC,QAAQ,mBAAR,CAAxB;;AAEA,IAAIC,SAASC,QAAQC,GAArB;AACA,IAAIC,UAAUF,QAAQG,IAAtB;AACA,IAAIC,WAAWJ,QAAQK,IAAvB;AACA,IAAIC,UAAUN,QAAQK,IAAtB;AACA,IAAIE,OAAO,YAAW,CAAE,CAAxB;AACAC,OAAOR,OAAP,CAAeC,GAAf,GAAqBA,IAAI,KAAJ,EAAWF,MAAX,CAArB;AACAS,OAAOR,OAAP,CAAeG,IAAf,GAAsBF,IAAI,MAAJ,EAAYC,OAAZ,CAAtB;AACAM,OAAOR,OAAP,CAAeS,KAAf,GAAuBR,IAAI,OAAJ,EAAaG,QAAb,CAAvB;AACAI,OAAOR,OAAP,CAAeK,IAAf,GAAsBJ,IAAI,MAAJ,EAAYK,OAAZ,CAAtB;;AAEAE,OAAOE,OAAP,GAAiB,UAASC,GAAT,EAAc;AAC3BV,QAAI,WAAJ,EAAiBM,IAAjB,EAAuBI,IAAIC,OAA3B,EAAoCD,IAAIE,KAAxC;AACH,CAFD;;AAIA,SAASZ,GAAT,CAAaa,KAAb,EAAoBC,KAApB,EAA2B;AACvB,WAAO,YAAW;AACdA,cAAMC,KAAN,CAAYhB,OAAZ,EAAqBiB,SAArB;AACA,YAAIC,UAAUrB,gBAAgBsB,WAAhB,CAA4B,UAA5B,CAAd;AACA,YAAI,CAACD,OAAL,EAAc;AACV;AACH;AACDA,gBAAQE,MAAR,CAAe;AACXC,iBAAKH,QAAQI,SAAR,EADM;AAEXC,oBAAQ;AAFG,SAAf,EAGGC,WAAWV,KAAX,EAAkBG,SAAlB,CAHH;AAIH,KAVD;AAWH;;AAED,SAASO,UAAT,CAAoBV,KAApB,EAA2BW,IAA3B,EAAiC;AAC7B,QAAIC,IAAI,QAAQZ,KAAR,GAAgB,GAAxB;AACAa,MAAEC,IAAF,CAAOH,IAAP,EAAa,UAASI,GAAT,EAAc;AACvBH,aAAK,GAAL;AACA,YAAIC,EAAEG,QAAF,CAAWD,GAAX,CAAJ,EAAqB;AACjBH,iBAAKG,GAAL;AACH,SAFD,MAEO;AACH,gBAAI;AACAH,qBAAKK,MAAMC,SAAN,CAAgBH,GAAhB,EAAqB,IAArB,EAA2B,CAA3B,CAAL;AACH,aAFD,CAEE,OAAMI,CAAN,EAAS;AACPP,qBAAK,mBAAL;AACH;AACJ;AACJ,KAXD;AAYA,WAAOA,IAAI,IAAX;AACH","file":"log.js","sourcesContent":["'use strict';\n\n// zed::log document is set up in `boot.js`\nconst session_manager = require('./session_manager');\n        \nvar oldLog = console.log;\nvar oldWarn = console.warn;\nvar oldError = console.info;\nvar oldInfo = console.info;\nvar noop = function() {};\nwindow.console.log = log(\"log\", oldLog);\nwindow.console.warn = log(\"warn\", oldWarn);\nwindow.console.error = log(\"error\", oldError);\nwindow.console.info = log(\"info\", oldInfo);\n\nwindow.onerror = function(err) {\n    log(\"exception\", noop)(err.message, err.stack);\n};\n\nfunction log(level, oldFn) {\n    return function() {\n        oldFn.apply(console, arguments);\n        var session = session_manager.specialDocs[\"zed::log\"];\n        if (!session) {\n            return;\n        }\n        session.insert({\n            row: session.getLength(),\n            column: 0\n        }, toLogEntry(level, arguments));\n    };\n}\n\nfunction toLogEntry(level, args) {\n    var s = '* [' + level + ']';\n    _.each(args, function(arg) {\n        s += ' ';\n        if (_.isString(arg)) {\n            s += arg;\n        } else {\n            try {\n                s += JSON5.stringify(arg, null, 2);\n            } catch(e) {\n                s += \"<<circular JSON>>\";\n            }\n        }\n    });\n    return s + \"\\n\";\n}\n"]}