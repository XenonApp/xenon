{"version":3,"sources":["../../src/js/xenpm.js"],"names":["semver","require","utils","Range","global","ace","command","config","configfs","editor","eventbus","fs","goto","sessionManager","ui","DAY","api","hook","on","installFromConfig","autoUpdate","data","localStorage","xenpmLastUpdated","lastUpdated","parseInt","Date","now","console","log","anyUpdates","updateAll","isConfig","fetchFileList","loadConfiguration","getInstalledPackageDetails","packages","getInstalledPackages","promises","name","push","readFile","Promise","all","map","pkg","JSON","parse","results","list","dir","getDir","dependencies","install","view","then","indexOf","Error","installAll","packageNames","getPackages","notYetInstalled","filter","length","err","error","installCommand","prompt","message","input","width","height","addPackage","reloadFileList","listInstalledPackages","edit","getActiveEditor","session","go","getSession","append","text","insert","row","getLength","column","lineCount","range","getLine","replace","version","description","selection","clearSelection","moveCursorToPosition","uninstall","update","newest","json","current","gt","promise","define","internal","readOnly","exec","pos","getCursor","lines","getDocument","getAllLines","giveFeedback","giveError","reloadConfig","line","removePackage","updated","doc","module","exports"],"mappings":"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","file":"xenpm.js","sourcesContent":["'use strict';\n\nconst semver = require('semver');\nconst utils = require('@xenonapp/xenpm-utils');\n\nconst Range = global.ace.require(\"ace/range\").Range;\n\nconst command = require('./command');\nconst config = require('./config');\nconst configfs = require('./configfs');\nconst editor = require('./editor');\nconst eventbus = require('./eventbus');\nconst fs = require('./fs');\nconst goto = require('./goto');\nconst sessionManager = require('./session_manager');\nconst ui = require('./ui');\n\nconst DAY = 24 * 60 * 60 * 1000; // number of ms in a day\n\nconst api = {\n    hook() {\n        eventbus.on(\"configchanged\", async () => {\n            await installFromConfig();\n            autoUpdate();\n        });\n    }\n};\n\nasync function autoUpdate() {\n    const data = localStorage.xenpmLastUpdated ? localStorage.xenpmLastUpdated : 0;\n    const lastUpdated = parseInt(data, 10);\n    \n    if (Date.now() - lastUpdated < DAY) {\n        return;\n    }\n    \n    console.log(\"XeNPM: Checking for updates...\");\n    localStorage.xenpmLastUpdated = Date.now();\n    const anyUpdates = await updateAll();\n    if (anyUpdates) {\n        if (fs.isConfig) {\n            return goto.fetchFileList();\n        }\n        return config.loadConfiguration();\n    }\n}\n\nasync function getInstalledPackageDetails() {\n    let packages = await getInstalledPackages();\n    const promises = [];\n    for (const name in packages) {\n        promises.push(configfs.readFile(`/node_modules/${name}/package.json`));\n    }\n    \n    packages = await Promise.all(promises);\n    return packages.map(pkg => JSON.parse(pkg));\n}\n\nasync function getInstalledPackages() {\n    const results = await utils.list({dir: config.getDir()});\n    return results.dependencies;\n}\n\nasync function install(packages) {\n    const promises = [];\n    for (const name of packages) {\n        promises.push(utils.view(name, 'keywords').then(results => {\n            if (!results || results.indexOf('xenon-package') === -1) {\n                throw new Error(`${name} is not a xenon package.`);\n            }\n        }));\n    }\n    \n    // Don't care about this beyond that it doesn't throw the error\n    await Promise.all(promises);\n    \n    return utils.install(packages, {dir: config.getDir()});\n}\n\nasync function installAll() {\n    try {\n        const packageNames = config.getPackages();\n        const packages = await getInstalledPackages();\n        \n        let notYetInstalled = packageNames;\n        if (packages) {\n            notYetInstalled = packageNames.filter(name => !packages[name]);\n        }\n        \n        console.log(\"These packages should be installed:\", notYetInstalled);\n        \n        await install(notYetInstalled);\n        return notYetInstalled.length > 0;\n    } catch(err) {\n        console.error(\"Error installing packages\", \"\" + err);\n    }\n}\n\nasync function installCommand() {\n    const name = await ui.prompt({\n        message: \"Package to install:\",\n        input: \"\",\n        width: 400,\n        height: 150\n    });\n    \n    if (!name) {\n        return;\n    }\n\n    try {\n        await install([name]);\n        await config.addPackage(name);\n    \n    \n        if (fs.isConfig) {\n            fs.reloadFileList();\n        }\n    \n        return ui.prompt({\n            message: \"Package installed successfully!\",\n            width: 300,\n            height: 150\n        });\n    } catch(err) {\n        return ui.prompt({\n            message: `Package installation failed.  Please check the package name. ${err}`,\n            width: 300,\n            height: 150\n        });\n    }\n}\n\nasync function installFromConfig() {\n    console.log(\"Installing packages\");\n    const anyUpdates = await installAll()\n    if (anyUpdates) {\n        if (fs.isConfig) {\n            return goto.fetchFileList();\n        }\n        return config.loadConfiguration();\n    }\n}\n\nasync function listInstalledPackages() {\n    const edit = editor.getActiveEditor();\n    const session = await sessionManager.go('zed::xenpm::installed', edit, edit.getSession());\n    const packages = await getInstalledPackageDetails();\n    \n    const append = function(text) {\n        session.insert({\n            row: session.getLength(),\n            column: 0\n        }, text);\n    }\n    \n    // Replace all text\n    const lineCount = session.getLength();\n    const range = new Range(0, 0, lineCount, session.getLine(lineCount - 1).length);\n    session.replace(range, \"Installed packages\\n==================\\n\");\n    \n    append(\"\\nCommands: [Install New]      [Update All]\\n\");\n    var pkg;\n    if (packages.length === 0) {\n        append(\"\\nYou do not have any packages installed.\\n\", function() {});\n    } else {\n        for (const pkg of packages) {\n            append(\"\\n\" + pkg.name + \"\\n\");\n            append(\"Version: \" + pkg.version + \"\\n\");\n            append(\"Description: \" + pkg.description + \"\\n\");\n            append(\"Commands: [Uninstall]      [Update]\\n\");\n        }\n    }\n    \n    session.selection.clearSelection();\n    session.selection.moveCursorToPosition({\n        row: 0,\n        column: 0\n    });\n}\n\nasync function uninstall(name) {\n    return utils.uninstall(name, {dir: config.getDir()});\n}\n\nasync function update(name) {\n    const [newest, json] = await Promise.all([\n        utils.view(name, 'version'),\n        configfs.readFile(`/node_modules/${name}/package.json`)\n    ]);\n    \n    const current = JSON.parse(json).version;\n    if (!semver.gt(newest, current)) {\n        return false;\n    }\n    await utils.install(name, {dir: config.getDir()});\n    return true;\n}\n\nasync function updateAll() {\n    const packageNames = config.getPackages();\n    const promises = [];\n    \n    for (const name of packageNames) {\n        const promise = Promise.all([\n            utils.view(name, 'version'),\n            configfs.readFile(`/node_modules/${name}/package.json`)\n        ]).then(([newest, json]) => {\n            if (!newest || !json) {\n                return false;\n            }\n            \n            json = JSON.parse(json);\n            const current = json.version;\n            \n            if (semver.gt(newest, current)) {\n                return name;\n            }\n            return false;\n        });\n        promises.push(promise);\n    }\n    \n    let packages = await Promise.all(promises);\n    packages = packages.filter(pkg => pkg !== false);\n    console.log('These packages should be updated:', packages);\n    \n    if (packages.length > 0) {\n        await utils.install(packages, {dir: config.getDir()});\n    }\n    \n    return packages.length;\n}\n\ncommand.define('Installed Packages:Execute Command', {\n    internal: true,\n    readOnly: true,\n    async exec() {\n        const edit = editor.getActiveEditor();\n        const session = edit.getSession();\n        const pos = session.selection.getCursor();\n        const lines = session.getDocument().getAllLines();\n    \n        function giveFeedback(message) {\n            if (message) {\n                ui.prompt({\n                    message,\n                    width: 300,\n                    height: 150\n                });\n            }\n            listInstalledPackages();\n        }\n    \n        function giveError(err) {\n            ui.prompt({\n                message: \"\"+err,\n                width: 300,\n                height: 150\n            });\n        }\n    \n        function reloadConfig() {\n            if (fs.isConfig) {\n                return goto.fetchFileList();\n            }\n            config.loadConfiguration();\n        }\n    \n        var line = lines[pos.row];\n        \n        try {\n            if (pos.row === 3 && line === \"Commands: [Install New]      [Update All]\") {\n                if (pos.column >= 10 && pos.column <= 23) {\n                    await installCommand();\n                    return listInstalledPackages();\n                } else if (pos.column >= 29) {\n                    await updateAll();\n                    reloadConfig();\n                    giveFeedback(\"Packages updated!\");\n                }\n            } else if (line === \"Commands: [Uninstall]      [Update]\") {\n                const name = lines[pos.row - 3];\n                if (pos.column >= 10 && pos.column <= 21) {\n                    console.log(`Unstalling ${name}`);\n                    await uninstall(name);\n                    await config.removePackage(name);\n                    reloadConfig();\n                    giveFeedback(`${name} uninstalled!`);\n                } else if (pos.column >= 27 && pos.column <= 35) {\n                    const updated = await update(name);\n                    if (updated) {\n                        reloadConfig();\n                        giveFeedback(`${name} updated!`);\n                    } else {\n                        giveFeedback(`${name} is already up to date.`)\n                    }\n                }\n            }\n        } catch(err) {\n            giveError(err);\n        }\n    }\n});\n\ncommand.define('Tools:XeNPM:Install', {\n    doc: 'Prompt to install a package.',\n    readOnly: true,\n    exec: installCommand\n});\n\ncommand.define('Tools:XeNPM:Installed Packages', {\n    doc: 'List packages that are already installed.',\n    readOnly: true,\n    exec: listInstalledPackages\n});\n\nmodule.exports = api;"]}