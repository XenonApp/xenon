{"version":3,"sources":["../../src/js/background.electron.js"],"names":["ipcRenderer","require","api","getOpenWindows","Promise","resolve","once","event","windows","send","loadProject","title","url","openProject","restart","selectDirectory","reject","dirs","switchToProject","index","quit","module","exports"],"mappings":"AAAA;;AAEA,MAAM,EAACA,WAAD,KAAgBC,QAAQ,UAAR,CAAtB;;AAEA,MAAMC,MAAM,EAAZ;;AAEAA,IAAIC,cAAJ,GAAqB,YAAW;AAC5B,WAAO,IAAIC,OAAJ,CAAYC,WAAW;AAC1BL,oBAAYM,IAAZ,CAAiB,cAAjB,EAAiC,CAACC,KAAD,EAAQC,OAAR,KAAoB;AACjDH,oBAAQG,OAAR;AACH,SAFD;;AAIAR,oBAAYS,IAAZ,CAAiB,kBAAjB;AACH,KANM,CAAP;AAOH,CARD;;AAUAP,IAAIQ,WAAJ,GAAkB,UAASC,KAAT,EAAgBC,GAAhB,EAAqB;AACnCZ,gBAAYS,IAAZ,CAAiB,cAAjB,EAAiCE,KAAjC,EAAwCC,GAAxC;AACH,CAFD;;AAIAV,IAAIW,WAAJ,GAAkB,UAASF,KAAT,EAAgBC,GAAhB,EAAqB;AACnCZ,gBAAYS,IAAZ,CAAiB,cAAjB,EAAiCE,KAAjC,EAAwCC,GAAxC;AACH,CAFD;;AAIAV,IAAIY,OAAJ,GAAc,YAAW;AACrBd,gBAAYS,IAAZ,CAAiB,SAAjB;AACH,CAFD;;AAIAP,IAAIa,eAAJ,GAAsB,YAAW;AAC7B,WAAO,IAAIX,OAAJ,CAAY,CAACC,OAAD,EAAUW,MAAV,KAAqB;AACpChB,oBAAYM,IAAZ,CAAiB,oBAAjB,EAAuC,CAACC,KAAD,EAAQU,IAAR,KAAiB;AACpD,gBAAI,CAACA,IAAL,EAAW;AACPD;AACH;;AAEDX,oBAAQY,KAAK,CAAL,CAAR;AACH,SAND;;AAQAjB,oBAAYS,IAAZ,CAAiB,gBAAjB;AACH,KAVM,CAAP;AAWH,CAZD;;AAcAP,IAAIgB,eAAJ,GAAsB,UAASC,KAAT,EAAgB;AAClCnB,gBAAYS,IAAZ,CAAiB,mBAAjB,EAAsCU,KAAtC;AACH,CAFD;;AAIAjB,IAAIkB,IAAJ,GAAW,YAAW;AAClBpB,gBAAYS,IAAZ,CAAiB,MAAjB;AACH,CAFD;;AAIAY,OAAOC,OAAP,GAAiBlB,QAAQC,OAAR,CAAgBH,GAAhB,CAAjB","file":"background.electron.js","sourcesContent":["'use strict';\n\nconst {ipcRenderer} = require('electron');\n\nconst api = {};\n\napi.getOpenWindows = function() {\n    return new Promise(resolve => {\n        ipcRenderer.once('open-windows', (event, windows) => {\n            resolve(windows);\n        });\n        \n        ipcRenderer.send('get-open-windows');\n    });\n};\n\napi.loadProject = function(title, url) {\n    ipcRenderer.send('load-project', title, url);\n};\n\napi.openProject = function(title, url) {\n    ipcRenderer.send('open-project', title, url);\n};\n\napi.restart = function() {\n    ipcRenderer.send('restart');\n};\n\napi.selectDirectory = function() {\n    return new Promise((resolve, reject) => {\n        ipcRenderer.once('selected-directory', (event, dirs) => {\n            if (!dirs) {\n                reject();\n            }\n            \n            resolve(dirs[0]);\n        });\n        \n        ipcRenderer.send('open-directory');\n    });\n};\n\napi.switchToProject = function(index) {\n    ipcRenderer.send('switch-to-project', index);\n};\n\napi.quit = function() {\n    ipcRenderer.send('quit');\n};\n\nmodule.exports = Promise.resolve(api);\n\n"]}