{"version":3,"sources":["../../src/js/history.chrome.js"],"names":["module","exports","api","pushProject","name","url","setTimeout","pushIt","console","log","chrome","storage","local","get","results","config","require","projects","recentProjects","length","existing","_","where","splice","loadConfiguration","then","getPreference","numToRemove","set","indexOf","renameProject","Promise","resolve","project","findWhere","removeProject","filter","lookupProjectByUrl","getProjects","reject","validProjects","all","map","fileSystem","isRestorable","substring","yes","push","addProjectChangeListener","listener","onChanged","addListener"],"mappings":"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","file":"history.chrome.js","sourcesContent":["module.exports = function() {\n    var api = {\n        pushProject: function(name, url) {\n            // Using setTimeout to wait for the whole architect app to the initialized\n            // kind of hacky, but ok\n            setTimeout(function pushIt() {\n                console.log(\"Pushing project\", name, url);\n                chrome.storage.local.get(\"recentProjects\", function(results) {\n                    var config = require(\"./config\");\n                    var projects = results.recentProjects || [];\n                    // sanity check projects array\n                    if (projects.length > 0 && !projects[0].url) {\n                        projects = [];\n                    }\n                    var existing = _.where(projects, {\n                        url: url\n                    });\n                    if (existing.length === 0) {\n                        projects.splice(0, 0, {\n                            name: name,\n                            url: url\n                        });\n                        config.loadConfiguration().then(function() {\n                            if (projects.length > config.getPreference(\"recentFolderHistory\")) {\n                                var numToRemove = projects.length - config.getPreference(\"recentFolderHistory\");\n                                projects.splice(projects.length - numToRemove, numToRemove);\n                            }\n                            chrome.storage.local.set({\n                                recentProjects: projects\n                            });\n                        });\n                    } else {\n                        projects.splice(projects.indexOf(existing[0]), 1);\n                        projects.splice(0, 0, {\n                            name: existing[0].name,\n                            url: url\n                        });\n                        chrome.storage.local.set({\n                            recentProjects: projects\n                        });\n                    }\n                });\n            }, 500);\n        },\n        renameProject: function(url, name) {\n            return new Promise(function(resolve) {\n                chrome.storage.local.get(\"recentProjects\", function(results) {\n                    var projects = results.recentProjects || [];\n                    var project = _.findWhere(projects, {\n                        url: url\n                    });\n                    project.name = name;\n                    chrome.storage.local.set({\n                        recentProjects: projects\n                    }, resolve);\n                });\n            });\n        },\n        removeProject: function(url) {\n            return new Promise(function(resolve) {\n                chrome.storage.local.get(\"recentProjects\", function(results) {\n                    var projects = results.recentProjects || [];\n                    projects = _.filter(projects, function(project) {\n                        return project.url !== url;\n                    });\n                    chrome.storage.local.set({\n                        recentProjects: projects\n                    }, resolve);\n                });\n            });\n        },\n        lookupProjectByUrl: function(url) {\n            return api.getProjects().then(function(projects) {\n                var project = _.findWhere(projects, {\n                    url: url\n                });\n                return project;\n            });\n        },\n        getProjects: function() {\n            return new Promise(function(resolve, reject) {\n                chrome.storage.local.get(\"recentProjects\", function(results) {\n                    var projects = results.recentProjects || [];\n                    // sanity check projects array\n                    if (projects.length > 0 && !projects[0].url) {\n                        projects = [];\n                    }\n                    var validProjects = [];\n                    Promise.all(projects.map(function(project) {\n                        if (project.url.indexOf(\"local:\") === 0) {\n                            chrome.fileSystem.isRestorable(project.url.substring(\"local:\".length), function(yes) {\n                                if (yes) {\n                                    validProjects.push(project);\n                                }\n                            });\n                        } else {\n                            validProjects.push(project);\n                        }\n                    })).then(function() {\n                        resolve(projects);\n                    }, reject);\n                });\n            });\n        },\n        addProjectChangeListener: function(listener) {\n            chrome.storage.onChanged.addListener(listener);\n        }\n    };\n    return api;\n};\n"]}