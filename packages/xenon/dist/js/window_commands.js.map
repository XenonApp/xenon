{"version":3,"sources":["../../src/js/window_commands.js"],"names":["command","require","win","ui","background","opts","define","doc","exec","close","readOnly","then","bg","quit","fullScreen","maximize","minimize","openProject","getOpenWindows","wins","filterBox","placeholder","text","filter","phrase","lcPhrase","toLowerCase","Promise","resolve","url","get","title","indexOf","map","name","path","index","icon","hint","onSelect","switchToProject"],"mappings":"AAAA;;AAEA,MAAMA,UAAUC,QAAQ,WAAR,CAAhB;AACA,MAAMC,MAAMD,QAAQ,UAAR,CAAZ;AACA,MAAME,KAAKF,QAAQ,MAAR,CAAX;AACA,MAAMG,aAAaH,QAAQ,cAAR,CAAnB;;AAEA,IAAII,OAAOJ,QAAQ,eAAR,CAAX;;AAEAD,QAAQM,MAAR,CAAe,cAAf,EAA+B;AAC3BC,SAAK,4BADsB;AAE3BC,UAAM,YAAW;AACbN,YAAIO,KAAJ;AACH,KAJ0B;AAK3BC,cAAU;AALiB,CAA/B;;AAQAV,QAAQM,MAAR,CAAe,UAAf,EAA2B;AACvBC,SAAK,yBADkB;AAEvBC,UAAM,YAAW;AACbJ,mBAAWO,IAAX,CAAgBC,MAAMA,GAAGC,IAAH,EAAtB;AACH,KAJsB;AAKvBH,cAAU;AALa,CAA3B;;AAQAV,QAAQM,MAAR,CAAe,mBAAf,EAAoC;AAChCC,SAAK,iEAD2B;AAEhCC,UAAM,YAAW;AACbN,YAAIY,UAAJ;AACH,KAJ+B;AAKhCJ,cAAU;AALsB,CAApC;;AAQAV,QAAQM,MAAR,CAAe,iBAAf,EAAkC;AAC9BC,SAAK,gEADyB;AAE9BC,UAAM,YAAW;AACbN,YAAIa,QAAJ;AACH,KAJ6B;AAK9BL,cAAU;AALoB,CAAlC;;AAQAV,QAAQM,MAAR,CAAe,iBAAf,EAAkC;AAC9BC,SAAK,+BADyB;AAE9BC,UAAM,YAAW;AACbN,YAAIc,QAAJ;AACH,KAJ6B;AAK9BN,cAAU;AALoB,CAAlC;;AAQAV,QAAQM,MAAR,CAAe,YAAf,EAA6B;AACzBC,SAAK,yBADoB;AAEzBC,UAAM,YAAW;AACbJ,mBAAWO,IAAX,CAAgBC,MAAMA,GAAGK,WAAH,CAAe,EAAf,EAAmB,EAAnB,CAAtB;AACH,KAJwB;AAKzBP,cAAU;AALe,CAA7B;;AAQAV,QAAQM,MAAR,CAAe,aAAf,EAA8B;AAC1BE,UAAM,YAAW;AACbJ,mBAAWO,IAAX,CAAgBC,MAAMA,GAAGM,cAAH,EAAtB,EAA2CP,IAA3C,CAAgDQ,QAAQ;AACpDhB,eAAGiB,SAAH,CAAa;AACTC,6BAAa,oBADJ;AAETC,sBAAM,EAFG;AAGTC,wBAAQ,UAASC,MAAT,EAAiB;AACrB,wBAAIC,WAAWD,OAAOE,WAAP,EAAf;AACA,2BAAOC,QAAQC,OAAR,CAAgBT,KAAKI,MAAL,CAAY,UAASrB,GAAT,EAAc;AAC7C,4BAAIA,IAAI2B,GAAJ,KAAYxB,KAAKyB,GAAL,CAAS,KAAT,CAAhB,EAAiC;AAC7B,mCAAO,KAAP;AACH;AACD,+BAAO5B,IAAI6B,KAAJ,CAAUL,WAAV,GAAwBM,OAAxB,CAAgCP,QAAhC,MAA8C,CAAC,CAAtD;AACH,qBALsB,EAKpBQ,GALoB,CAKhB,UAAS/B,GAAT,EAAc;AACjB,+BAAO;AACHgC,kCAAMhC,IAAI6B,KADP;AAEHI,kCAAMjC,IAAIkC,KAFP;AAGHC,kCAAM;AAHH,yBAAP;AAKH,qBAXsB,CAAhB,CAAP;AAYH,iBAjBQ;AAkBTC,sBAAM,YAAW;AACb,2BAAO,wDAAP;AACH,iBApBQ;AAqBTC,0BAAU,UAASH,KAAT,EAAgB;AACtBhC,+BAAWoC,eAAX,CAA2BJ,KAA3B;AACH;AAvBQ,aAAb;AAyBH,SA1BD;AA2BH,KA7ByB;AA8B1B1B,cAAU;AA9BgB,CAA9B","file":"window_commands.js","sourcesContent":["'use strict';\n\nconst command = require('./command');\nconst win = require('./window');\nconst ui = require('./ui');\nconst background = require('./background');\n    \nvar opts = require(\"./lib/options\");\n\ncommand.define(\"Window:Close\", {\n    doc: \"Closes the current window.\",\n    exec: function() {\n        win.close();\n    },\n    readOnly: true\n});\n\ncommand.define(\"Zed:Quit\", {\n    doc: \"Closes all Zed windows.\",\n    exec: function() {\n        background.then(bg => bg.quit());\n    },\n    readOnly: true\n});\n\ncommand.define(\"Window:Fullscreen\", {\n    doc: \"Toggles between windowed and fullscreen for the current window.\",\n    exec: function() {\n        win.fullScreen();\n    },\n    readOnly: true\n});\n\ncommand.define(\"Window:Maximize\", {\n    doc: \"Toggles between windowed and maximized for the current window.\",\n    exec: function() {\n        win.maximize();\n    },\n    readOnly: true\n});\n\ncommand.define(\"Window:Minimize\", {\n    doc: \"Minimizes the current window.\",\n    exec: function() {\n        win.minimize();\n    },\n    readOnly: true\n});\n\ncommand.define(\"Window:New\", {\n    doc: \"Opens a new Zed window.\",\n    exec: function() {\n        background.then(bg => bg.openProject(\"\", \"\"));\n    },\n    readOnly: true\n});\n\ncommand.define(\"Window:List\", {\n    exec: function() {\n        background.then(bg => bg.getOpenWindows()).then(wins => {\n            ui.filterBox({\n                placeholder: \"Filter window list\",\n                text: \"\",\n                filter: function(phrase) {\n                    var lcPhrase = phrase.toLowerCase();\n                    return Promise.resolve(wins.filter(function(win) {\n                        if (win.url === opts.get(\"url\")) {\n                            return false;\n                        }\n                        return win.title.toLowerCase().indexOf(lcPhrase) !== -1;\n                    }).map(function(win) {\n                        return {\n                            name: win.title,\n                            path: win.index,\n                            icon: \"action\"\n                        };\n                    }));\n                },\n                hint: function() {\n                    return \"Press <tt>Enter</tt> to switch to the selected window.\";\n                },\n                onSelect: function(index) {\n                    background.switchToProject(index);\n                }\n            });\n        });\n    },\n    readOnly: true\n});\n"]}