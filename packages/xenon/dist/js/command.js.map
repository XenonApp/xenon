{"version":3,"sources":["../../src/js/command.js"],"names":["eventbus","require","keys","useragent","global","ace","fuzzyfind","commands","configCommands","declare","defineUserCommand","name","cmd","api","defineConfig","doc","exec","edit","session","execCommand","catch","err","console","error","readOnly","internal","requiredCapabilities","hook","on","config","_","each","getCommands","emit","define","path","def","lookup","isVisible","checkAvailabilityOnly","modeName","mode","language","modeCommand","capabilities","getCapabilities","hasRequiredCapabilities","val","key","getTokenAt","arguments","Promise","resolve","apply","toArray","slice","identifyCurrentKey","commandKeys","getCommandKeys","isString","isMac","mac","win","allCommands","Object","concat","prefix","undefined","recentCommands","get","filter","phrase","results","result","meta","icon","command","sort","a","b","score","lastUseA","lastUseB","filterBox","placeholder","hint","text","onSelect","Date","now","set","getSession","go","then","command_list","prev_tree","forEach","command_name","e","command_tree","split","len","length","i","Array","join","replace","binding","setValue","reset","module","exports"],"mappings":"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","file":"command.js","sourcesContent":["\"use strict\";\n\nconst eventbus = require('./eventbus');\nconst keys = require('./keys');\n\nvar useragent = global.ace.require(\"ace/lib/useragent\");\nvar fuzzyfind = require(\"./lib/fuzzyfind\");\n\nvar commands = {};\n\n// Commands coming from configuration somehow (user commands, theme commands)\nvar configCommands = {};\n\n// Triggered by mode.js when mode commands were loaded\neventbus.declare(\"commandsloaded\");\n// Triggered when config commands were reset and should be reloaded from config\neventbus.declare(\"configcommandsreset\");\neventbus.declare(\"executedcommand\");\n\nfunction defineUserCommand(name, cmd) {\n    api.defineConfig(name, {\n        doc: cmd.doc,\n        exec: function(edit, session) {\n            return require(\"./sandboxes\").execCommand(name, cmd, session).\n                catch (function(err) {\n                    console.error(\"Command\", name, \"failed:\", err);\n                });\n        },\n        readOnly: cmd.readOnly,\n        internal: cmd.internal,\n        requiredCapabilities: cmd.requiredCapabilities\n    });\n}\n\n\nvar api = {\n    hook: function() {\n        eventbus.on(\"configchanged\", function(config) {\n            configCommands = {};\n            _.each(config.getCommands(), function(cmd, name) {\n                defineUserCommand(name, cmd);\n            });\n            eventbus.emit(\"configcommandsreset\", config);\n        });\n    },\n    /**\n     * @param path in the form of 'Editor:Select All'\n     * @param definition json object:\n     *  {\n     *      exec: function() { ... },\n     *      readOnly: true\n     *  }\n     */\n    define: function(path, def) {\n        def.name = path;\n        commands[path] = def;\n    },\n\n    defineConfig: function(path, def) {\n        def.name = path;\n        configCommands[path] = def;\n    },\n\n    lookup: function(path) {\n        return configCommands[path] || commands[path];\n    },\n\n    isVisible: function(session, cmd, checkAvailabilityOnly) {\n        var requiredCapabilities = cmd.requiredCapabilities;\n        var modeName = session.mode ? session.mode.language : '';\n        if (cmd.modeCommand && cmd.modeCommand[modeName]) {\n            requiredCapabilities = cmd.modeCommand[modeName].requiredCapabilities;\n        }\n        if (requiredCapabilities) {\n            var capabilities = require(\"./fs\").getCapabilities();\n            var hasRequiredCapabilities = true;\n            _.each(requiredCapabilities, function(val, key) {\n                if(!capabilities[key]) {\n                    hasRequiredCapabilities = false;\n                }\n            });\n            if(!hasRequiredCapabilities) {\n                return false;\n            }\n        }\n        if (cmd.modeCommand) {\n            if (!session.mode) {\n                return true;\n            }\n            return cmd.modeCommand[modeName] && (!cmd.modeCommand[modeName].internal || checkAvailabilityOnly);\n        }\n        if (cmd.internal && !checkAvailabilityOnly) {\n            return false;\n        }\n        return true;\n    },\n\n    exec: function(path, edit, session) {\n        var def = api.lookup(path);\n        if (!session.getTokenAt) { // Check if this is a session object\n            console.error(\"Did not pass in session to exec\", arguments);\n        }\n        return Promise.resolve(def.exec.apply(null, _.toArray(arguments).slice(1)));\n    },\n\n    identifyCurrentKey: function(path) {\n        var commandKeys = keys.getCommandKeys();\n        var key = commandKeys[path];\n        if (key) {\n            if (_.isString(key)) {\n                return key;\n            } else {\n                return useragent.isMac ? key.mac : key.win;\n            }\n        }\n    },\n\n    allCommands: function() {\n        return Object.keys(configCommands).concat(Object.keys(commands));\n    }\n};\n\napi.define(\"Command:Enter Command\", {\n    doc: \"Prompts for a command to invoke, with a convenient searchable interface.\",\n    exec: function(edit, session, prefix) {\n        if (typeof prefix !== \"string\") {\n            prefix = undefined;\n        }\n        // Lazy loading these\n        var recentCommands = require(\"./state\").get(\"recent.commands\") || {};\n\n        function filter(phrase) {\n            var results = fuzzyfind(api.allCommands(), phrase);\n            results = results.filter(function(result) {\n                result.meta = api.identifyCurrentKey(result.path);\n                result.icon = \"action\";\n                // Let's rename the `cmd` variable using multiple cursors...\n                // There are three instances\n                var command = api.lookup(result.path);\n                // Filter out commands that are language-specific and don't apply to this mode\n                return api.isVisible(session, command);\n            });\n            results.sort(function(a, b) {\n                if (a.score === b.score) {\n                    var lastUseA = recentCommands[a.name] || 0;\n                    var lastUseB = recentCommands[b.name] || 0;\n                    if (lastUseA === lastUseB) {\n                        return a.name < b.name ? -1 : 1;\n                    } else {\n                        return lastUseB - lastUseA;\n                    }\n                } else {\n                    return b.score - a.score;\n                }\n            });\n            return Promise.resolve(results);\n        }\n        require(\"./ui\").filterBox({\n            placeholder: \"Enter command\",\n            filter: filter,\n            hint: function() {\n                return \"Press <tt>Enter</tt> to run the selected command.\";\n            },\n            text: prefix || \"\",\n            onSelect: function(cmd) {\n                recentCommands[cmd] = Date.now();\n                require(\"./state\").set(\"recent.commands\", recentCommands);\n                api.exec(cmd, edit, edit.getSession());\n                eventbus.emit(\"executedcommand\", cmd);\n            }\n        });\n    },\n    readOnly: true\n});\n\napi.define(\"Help:Commands\", {\n    exec: function(edit, session) {\n        return require(\"./session_manager\").go(\"zed::commands\", edit, session).then(function(session) {\n            var command_list = \"> Zed Online Command Reference.\\n\" +\n                \"\\n   What follows is a complete reference of all commands \" +\n                \"known to Zed, and their current keybindings, even if \" +\n                \"you've modified the defaults. Click a command to activate it.\\n\\n\" +\n                \"   `Fold:Fold All`\\n   `Fold:Unfold All`\\n\\n\\n\";\n            var prev_tree = [];\n            api.allCommands().sort().forEach(function(command_name) {\n                // Ignore internal and wrong-mode commands.\n                var command = api.lookup(command_name) || {};\n                try {\n                    if (command.modeCommand[session.mode.language].internal) {\n                        return;\n                    }\n                } catch (e) {}\n                if (command.internal) {\n                    return;\n                }\n\n                // Add headers for different sections.\n                var command_tree = command_name.split(\":\");\n                var len = command_tree.length - 1;\n                for (var i = 0; i < len; ++i) {\n                    if (prev_tree[i] !== command_tree[i]) {\n                        command_list += \"\\n\" + new Array(i + 2).join(\"#\") +\n                            \" \" + command_tree[i] + \"\\n\\n\";\n                    }\n                }\n                prev_tree = command_tree;\n\n                // Get the command documentation.\n                var doc = command.doc ? \"\\n   \" + command.doc.replace(/\\n/g, \"\\n\\n   \") + \"\\n\" : \"\";\n\n                // Get the current keybinding.\n                var binding = api.identifyCurrentKey(command_name) || \"\";\n                binding = binding ? \"`\" + binding + \"`\" : \"Not set\";\n\n                // Add the full command details to the document.\n                command_list +=\n                    \"\\n>    \" + command_tree.slice(-1) + \"\\n\" +\n                    \"\\n   `\" + command_name + \"`\" +\n                    \"\\n   Current Key Binding:    \" + binding +\n                    \"\\n\" + doc + \"\\n\";\n            });\n            session.setValue(command_list);\n        });\n    },\n    readOnly: true\n});\n\napi.define(\"Configuration:Reset Editor State\", {\n    doc: \"Reset the editor to it's initial state.\",\n    exec: function() {\n        require(\"./state\").reset();\n    },\n    readOnly: true\n});\n\nmodule.exports = api;\n"]}