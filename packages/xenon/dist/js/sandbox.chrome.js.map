{"version":3,"sources":["../../src/js/sandbox.chrome.js"],"names":["async","require","events","id","waitingForReply","Sandbox","EventEmitter","constructor","sandboxEl","execCommand","queueUntilEvent","$execCommand","bind","reset","name","spec","session","Promise","resolve","reject","$cmdInfo","Object","assign","err","result","scriptUrl","inputs","input","zed","getService","getInputable","contentWindow","postMessage","command","url","fn","data","path","filename","destroy","$","append","sb","css","addEventListener","executeScript","file","emit","e","console","log","message","line","remove","handleApiRequest","event","mod","module","call","source","replyTo","r","apply","args","then","error","window","onmessage","execSandboxApi","api","parts","split","slice","length","join","exports"],"mappings":"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","file":"sandbox.chrome.js","sourcesContent":["/**\n * This module manages the Zed sandbox, the sandbox is used to run user\n * provided code, either fetched from the Zed code base itself, or fetched\n * from remote URLs.\n *\n * Sandboxed code cannot crash Zed itself, but can call some Zed-specific APIs.\n * These APIs live in the \"zed/*\" require.js namespace in the sandbox, and are\n * essentially proxies proxying the request to Zed itself via postMessage\n * communication. The APIs interfaces are defined in sandbox/interface/zed/*\n * and the Zed side is implemented in sandbox/impl/zed/*.\n */\nvar async = require(\"./lib/async\");\nvar events = require(\"./lib/events\");\n\nvar id = 0; // global request counter\nvar waitingForReply = {}; // global waiting for message registry\n\nclass Sandbox extends events.EventEmitter {\n    constructor() {\n        super();\n        this.sandboxEl = null;\n        this.execCommand = async.queueUntilEvent(this, \"sandboxready\", this.$execCommand.bind(this));\n        this.reset();\n    }\n    \n    $execCommand(name, spec, session) {\n        return new Promise((resolve, reject) => {\n            if (session.$cmdInfo) {\n                spec = Object.assign({}, spec, session.$cmdInfo);\n                session.$cmdInfo = null;\n            }\n            id++;\n            waitingForReply[id] = function(err, result) {\n                if (err) {\n                    reject(err);\n                } else {\n                    resolve(result);\n                }\n            };\n            var scriptUrl = spec.scriptUrl;\n            if (scriptUrl[0] === \"/\") {\n                scriptUrl = \"configfs!\" + scriptUrl;\n            }\n            // This data can be requested as input in commands.json\n            var inputs = {};\n            for (var input in (spec.inputs || {})) {\n                inputs[input] = zed.getService(\"sandboxes\").getInputable(session, input);\n            }\n            this.sandboxEl[0].contentWindow.postMessage({\n                command: 'exec',\n                url: spec.scriptUrl,\n                fn: spec.fn,\n                data: Object.assign({}, spec, {\n                    path: session.filename,\n                    inputs: inputs\n                }),\n                id: id\n            }, '*');\n        });\n    }\n    \n    reset() {\n        return new Promise(resolve => {\n            this.destroy();\n    \n            var sandboxEl = $('<webview class=\"sandbox\" src=\"data:text/html,<html><body>Right click and choose Inspect Element to open error console.</body></html>\">');\n            this.sandboxEl = sandboxEl;\n            $(\"body\").append(sandboxEl);\n            var sb = sandboxEl[0];\n            sandboxEl.css(\"left\", \"-1000px\");\n            sb.addEventListener(\"contentload\",() => {\n                sb.executeScript({\n                    file: './build/sandbox.js'\n                }, () => {\n                    this.emit(\"sandboxready\");\n                    resolve();\n                });\n            });\n            sb.addEventListener('consolemessage', function(e) {\n                console.log('[Sandbox]: ' + e.message + ' (line: ' + e.line + ')');\n            });\n        });\n    }\n    \n    destroy() {\n        if (this.sandboxEl) {\n            this.sandboxEl.remove();\n        }\n    }\n}\n\n\n/**\n * Handle a request coming from within the sandbox, and send back a response\n */\nfunction handleApiRequest(event) {\n    var data = event.data;\n    const mod = require(\"./sandbox/\" + data.module);\n    if (!mod[data.call]) {\n        return event.source.postMessage({\n            replyTo: data.id,\n            err: \"No such method: \" + mod\n        }, \"*\");\n    }\n    var r = mod[data.call].apply(mod, data.args);\n    if (!r || !r.then) {\n        console.error(\"Got empty result from\", mod, data.call);\n    }\n    r.then(function(result) {\n        event.source.postMessage({\n            replyTo: data.id,\n            result: result\n        }, \"*\");\n    }, function(err) {\n        event.source.postMessage({\n            replyTo: data.id,\n            err: err,\n        }, \"*\");\n    });\n}\n\nwindow.onmessage = function(event) {\n    var data = event.data;\n    var replyTo = data.replyTo;\n    if (data.command === \"api-request\") {\n        return handleApiRequest(event);\n    }\n    if (!replyTo) {\n        return;\n    }\n    var err = data.err;\n    var result = data.result;\n    if (waitingForReply[replyTo]) {\n        waitingForReply[replyTo](err, result);\n        delete waitingForReply[replyTo];\n    } else {\n        console.error(\"Got response to unknown message id:\", replyTo);\n    }\n};\n\nwindow.execSandboxApi = function(api, args) {\n    var parts = api.split('.');\n    var mod = parts.slice(0, parts.length - 1).join('/');\n    var call = parts[parts.length - 1];\n    return new Promise(function(resolve, reject) {\n        require([\"./sandbox/\" + mod], function(mod) {\n            if (!mod[call]) {\n                return reject(\"No such method: \" + call);\n            }\n            mod[call].apply(this, args).then(resolve, reject);\n        });\n    });\n};\n\nmodule.exports = Sandbox;\n"]}