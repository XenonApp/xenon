{"version":3,"sources":["../../src/js/window.chrome.js"],"names":["win","chrome","app","window","current","background","require","eventbus","userAgent","global","ace","opts","declare","closeHandler","then","bg","registerWindow","get","api","close","force","emit","setCloseHandler","handler","useNativeFrame","isLinux","fullScreen","isFullscreen","restore","fullscreen","maximize","isMaximized","minimize","getBounds","bounds","width","height","top","left","setBounds","addResizeListener","listener","onBoundsChanged","addListener","focus","module","exports"],"mappings":";;AAAA;AACA,IAAIA,MAAMC,OAAOC,GAAP,CAAWC,MAAX,CAAkBC,OAAlB,EAAV;;AAEA,MAAMC,aAAaC,QAAQ,cAAR,CAAnB;AACA,MAAMC,WAAWD,QAAQ,YAAR,CAAjB;AACA,IAAIE,YAAYC,OAAOC,GAAP,CAAWJ,OAAX,CAAmB,mBAAnB,CAAhB;AACA,IAAIK,OAAOL,QAAQ,eAAR,CAAX;;AAEAC,SAASK,OAAT,CAAiB,aAAjB;;AAEA,IAAIC,eAAe,IAAnB;;AAEAR,WAAWS,IAAX,CAAgBC,MAAMA,GAAGC,cAAH,CAAkBL,KAAKM,GAAL,CAAS,OAAT,CAAlB,EAAqCN,KAAKM,GAAL,CAAS,KAAT,CAArC,EAAsDjB,GAAtD,CAAtB;;AAEA,IAAIkB,MAAM;AACNC,WAAO,UAASC,KAAT,EAAgB;AACnB,YAAIA,SAAS,CAACP,YAAd,EAA4B;AACxBb,gBAAImB,KAAJ;AACH,SAFD,MAEO;AACHZ,qBAASc,IAAT,CAAc,aAAd;AACAR;AACH;AACJ,KARK;AASNS,qBAAiB,UAASC,OAAT,EAAkB;AAC/BV,uBAAeU,OAAf;AACH,KAXK;AAYNC,oBAAgB,YAAW;AACvB,eAAOhB,UAAUiB,OAAjB;AACA;AACH,KAfK;AAgBNC,gBAAY,YAAW;AACnB,YAAI1B,IAAI2B,YAAJ,EAAJ,EAAwB;AACpB3B,gBAAI4B,OAAJ;AACH,SAFD,MAEO;AACH5B,gBAAI6B,UAAJ;AACH;AACJ,KAtBK;AAuBNC,cAAU,YAAW;AACjB,YAAI9B,IAAI+B,WAAJ,EAAJ,EAAuB;AACnB/B,gBAAI4B,OAAJ;AACH,SAFD,MAEO;AACH5B,gBAAI8B,QAAJ;AACH;AACJ,KA7BK;AA8BNE,cAAU,YAAW;AACjBhC,YAAIgC,QAAJ;AACH,KAhCK;AAiCNC,eAAW,YAAW;AAClB,YAAIC,SAASlC,IAAIiC,SAAJ,EAAb;AACA,eAAO;AACHE,mBAAOD,OAAOC,KADX;AAEHC,oBAAQF,OAAOE,MAFZ;AAGHC,iBAAKH,OAAOG,GAHT;AAIHC,kBAAMJ,OAAOI,IAJV;AAKHP,yBAAa/B,IAAI+B,WAAJ;AALV,SAAP;AAOH,KA1CK;AA2CNQ,eAAW,UAASL,MAAT,EAAiB;AACxB,YAAIA,OAAOH,WAAX,EAAwB;AACpB/B,gBAAI8B,QAAJ;AACH,SAFD,MAEO;AACH,gBAAII,OAAOC,KAAP,GAAe,GAAf,IAAsBD,OAAOE,MAAP,GAAgB,GAA1C,EAA+C;AAC3C;AACA;AACH;AACD,mBAAOF,OAAOH,WAAd;AACA/B,gBAAIuC,SAAJ,CAAcL,MAAd;AACH;AACJ,KAtDK;AAuDNM,uBAAmB,UAASC,QAAT,EAAmB;AAClCzC,YAAI0C,eAAJ,CAAoBC,WAApB,CAAgCF,QAAhC;AACH,KAzDK;AA0DNG,WAAO,YAAW;AACd3C,eAAOC,GAAP,CAAWC,MAAX,CAAkBC,OAAlB,GAA4BwC,KAA5B;AACH;AA5DK,CAAV;;AA+DAC,OAAOC,OAAP,GAAiB5B,GAAjB","file":"window.chrome.js","sourcesContent":["/*global chrome, define*/\nvar win = chrome.app.window.current();\n\nconst background = require('./background');\nconst eventbus = require('./eventbus');\nvar userAgent = global.ace.require(\"ace/lib/useragent\");\nvar opts = require(\"./lib/options\");\n\neventbus.declare(\"windowclose\");\n\nvar closeHandler = null;\n\nbackground.then(bg => bg.registerWindow(opts.get(\"title\"), opts.get(\"url\"), win));\n\nvar api = {\n    close: function(force) {\n        if (force || !closeHandler) {\n            win.close();\n        } else {\n            eventbus.emit(\"windowclose\");\n            closeHandler();\n        }\n    },\n    setCloseHandler: function(handler) {\n        closeHandler = handler;\n    },\n    useNativeFrame: function() {\n        return userAgent.isLinux;\n        // return false;\n    },\n    fullScreen: function() {\n        if (win.isFullscreen()) {\n            win.restore();\n        } else {\n            win.fullscreen();\n        }\n    },\n    maximize: function() {\n        if (win.isMaximized()) {\n            win.restore();\n        } else {\n            win.maximize();\n        }\n    },\n    minimize: function() {\n        win.minimize();\n    },\n    getBounds: function() {\n        var bounds = win.getBounds();\n        return {\n            width: bounds.width,\n            height: bounds.height,\n            top: bounds.top,\n            left: bounds.left,\n            isMaximized: win.isMaximized()\n        };\n    },\n    setBounds: function(bounds) {\n        if (bounds.isMaximized) {\n            win.maximize();\n        } else {\n            if (bounds.width < 200 || bounds.height < 200) {\n                // Bounds messed up, let's just ignore and use defaults\n                return;\n            }\n            delete bounds.isMaximized;\n            win.setBounds(bounds);\n        }\n    },\n    addResizeListener: function(listener) {\n        win.onBoundsChanged.addListener(listener);\n    },\n    focus: function() {\n        chrome.app.window.current().focus();\n    }\n};\n\nmodule.exports = api;\n"]}