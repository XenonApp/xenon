{"version":3,"sources":["../../src/js/window.electron.js"],"names":["remote","require","url","path","command","sandboxes","win","getCurrentWindow","api","close","loadURL","title","projectPath","destroy","format","pathname","join","__dirname","protocol","slashes","query","useNativeFrame","fullScreen","isFullscreen","setFullScreen","maximize","minimize","getBounds","setBounds","bounds","setMenu","menu","focus","define","doc","exec","reload","readOnly","webContents","toggleDevTools","module","exports"],"mappings":"AAAA;;AAEA,MAAM,EAACA,MAAD,KAAWC,QAAQ,UAAR,CAAjB;AACA,MAAMC,MAAMD,QAAQ,KAAR,CAAZ;AACA,MAAME,OAAOF,QAAQ,MAAR,CAAb;;AAEA,MAAMG,UAAUH,QAAQ,WAAR,CAAhB;AACA,MAAMI,YAAYJ,QAAQ,aAAR,CAAlB;;AAEA,IAAIK,MAAMN,OAAOO,gBAAP,EAAV;;AAEA,IAAIC,MAAM;AACNC,WAAO,YAAW;AACdH,YAAIG,KAAJ;AACH,KAHK;AAINC,aAAS,UAASC,KAAT,EAAgBC,WAAhB,EAA6B;AAClC;AACA;AACAP,kBAAUQ,OAAV;AACAP,YAAII,OAAJ,CAAYR,IAAIY,MAAJ,CAAW;AACnBC,sBAAUZ,KAAKa,IAAL,CAAUC,SAAV,EAAqB,IAArB,EAA2B,aAA3B,CADS;AAEnBC,sBAAU,OAFS;AAGnBC,qBAAS,IAHU;AAInBC,mBAAO;AACHT,qBADG;AAEHT,qBAAKU;AAFF;AAJY,SAAX,CAAZ;AASH,KAjBK;AAkBNS,oBAAgB,YAAW;AACvB,eAAO,IAAP;AACH,KApBK;AAqBNC,gBAAY,YAAW;AACnB,YAAIhB,IAAIiB,YAAJ,EAAJ,EAAwB;AACpBjB,gBAAIkB,aAAJ,CAAkB,KAAlB;AACH,SAFD,MAEO;AACHlB,gBAAIkB,aAAJ,CAAkB,IAAlB;AACH;AACJ,KA3BK;AA4BNC,cAAU,YAAW;AACjBnB,YAAImB,QAAJ;AACH,KA9BK;AA+BNC,cAAU,YAAW;AACjBpB,YAAIoB,QAAJ;AACH,KAjCK;AAkCNC,eAAW,YAAW;AAClB,eAAOrB,IAAIqB,SAAJ,EAAP;AACH,KApCK;AAqCNC,eAAW,UAASC,MAAT,EAAiB;AACxBvB,YAAIsB,SAAJ,CAAcC,MAAd;AACH,KAvCK;AAwCNC,aAAS,UAASC,IAAT,EAAe;AACpBzB,YAAIwB,OAAJ,CAAYC,IAAZ;AACH,KA1CK;AA2CNC,WAAO,YAAW;AACd1B,YAAI0B,KAAJ;AACH;AA7CK,CAAV;;AAgDA5B,QAAQ6B,MAAR,CAAe,eAAf,EAAgC;AAC5BC,SAAK,4BADuB;AAE5BC,UAAM,YAAW;AACb7B,YAAI8B,MAAJ;AACH,KAJ2B;AAK5BC,cAAU;AALkB,CAAhC;;AAQAjC,QAAQ6B,MAAR,CAAe,2BAAf,EAA4C;AACxCC,SAAK,uCADmC;AAExCC,UAAM,YAAW;AACb7B,YAAIgC,WAAJ,CAAgBC,cAAhB;AACH,KAJuC;AAKxCF,cAAU;AAL8B,CAA5C;;AAQAG,OAAOC,OAAP,GAAiBjC,GAAjB","file":"window.electron.js","sourcesContent":["'use strict';\n\nconst {remote} = require('electron');\nconst url = require('url');\nconst path = require('path');\n\nconst command = require('./command');\nconst sandboxes = require('./sandboxes');\n\nvar win = remote.getCurrentWindow();\n\nvar api = {\n    close: function() {\n        win.close();\n    },\n    loadURL: function(title, projectPath) {\n        // have to destroy sandboxes or they will leak and the process will not\n        // quit correctly\n        sandboxes.destroy();\n        win.loadURL(url.format({\n            pathname: path.join(__dirname, '..', 'editor.html'),\n            protocol: 'file:',\n            slashes: true,\n            query: {\n                title,\n                url: projectPath\n            }\n        }));\n    },\n    useNativeFrame: function() {\n        return true;\n    },\n    fullScreen: function() {\n        if (win.isFullscreen()) {\n            win.setFullScreen(false);\n        } else {\n            win.setFullScreen(true);\n        }\n    },\n    maximize: function() {\n        win.maximize();\n    },\n    minimize: function() {\n        win.minimize();\n    },\n    getBounds: function() {\n        return win.getBounds();\n    },\n    setBounds: function(bounds) {\n        win.setBounds(bounds);\n    },\n    setMenu: function(menu) {\n        win.setMenu(menu);\n    },\n    focus: function() {\n        win.focus();\n    }\n};\n\ncommand.define(\"Window:Reload\", {\n    doc: \"Reload the current window.\",\n    exec: function() {\n        win.reload();\n    },\n    readOnly: true\n});\n\ncommand.define(\"Development:Show DevTools\", {\n    doc: \"Show the node-webkit developer tools.\",\n    exec: function() {\n        win.webContents.toggleDevTools();\n    },\n    readOnly: true\n});\n\nmodule.exports = api;\n"]}