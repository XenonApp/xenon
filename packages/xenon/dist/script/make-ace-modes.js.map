{"version":3,"sources":["../../src/script/make-ace-modes.js"],"names":["fs","require","modelist","global","define","name","injects","cb","module","exports","window","modesJson","blacklist","i","modes","length","mode","indexOf","console","log","jsonName","existsSync","extensions","split","extensions_pretty","filenames_pretty","ei","ext","push","substr","writeFileSync","caption","join","flags","imports","sort","JSON","stringify"],"mappings":";;AAAA,IAAIA,KAAKC,QAAQ,IAAR,CAAT;AACA,IAAIC,WAAW,EAAf;;AAEA;AACA;AACAC,OAAOC,MAAP,GAAgB,UAASC,IAAT,EAAeC,OAAf,EAAwBC,EAAxB,EAA4B;AACxC,QAAIC,SAAS,EAACC,SAASP,QAAV,EAAb;AACAK,OAAGN,OAAH,EAAYC,QAAZ,EAAsBM,MAAtB;AACAN,eAAWM,OAAOC,OAAlB;AACH,CAJD;AAKAN,OAAOO,MAAP,GAAgB;AACZT,aAAS,YAAW,CAAE;AADV,CAAhB;AAGAA,QAAQ,yBAAR;;AAEA,IAAIU,YAAYV,QAAQ,+BAAR,CAAhB;;AAEA,IAAIW,YAAY,CAAC,OAAD,EAAU,KAAV,EAAiB,QAAjB,EAA2B,YAA3B,EAAyC,MAAzC,EAAiD,YAAjD,EACC,UADD,EACa,KADb,EACoB,KADpB,EAC2B,UAD3B,CAAhB;;AAGA,KAAI,IAAIC,IAAI,CAAZ,EAAeA,IAAIX,SAASY,KAAT,CAAeC,MAAlC,EAA0CF,GAA1C,EAA+C;AAC3C,QAAIG,OAAOd,SAASY,KAAT,CAAeD,CAAf,CAAX;AACA,QAAGD,UAAUK,OAAV,CAAkBD,KAAKX,IAAvB,KAAgC,CAAnC,EAAsC;AAClCa,gBAAQC,GAAR,CAAYH,KAAKX,IAAL,GAAY,cAAxB;AACA;AACH;AACD,QAAIe,WAAW,6BAA6BJ,KAAKX,IAAlC,GAAyC,OAAxD;AACA,QAAGL,GAAGqB,UAAH,CAAcD,QAAd,CAAH,EAA4B;AACxBF,gBAAQC,GAAR,CAAYH,KAAKX,IAAL,GAAY,iBAAxB;AACA;AACH;;AAED,QAAIiB,aAAaN,KAAKM,UAAL,CAAgBC,KAAhB,CAAsB,GAAtB,CAAjB;AAAA,QACIC,oBAAoB,EADxB;AAAA,QAEIC,mBAAmB,EAFvB;AAGA,SAAI,IAAIC,KAAK,CAAb,EAAgBA,KAAKJ,WAAWP,MAAhC,EAAwCW,IAAxC,EAA8C;AAC1C,YAAIC,MAAML,WAAWI,EAAX,CAAV;AACA,YAAGC,IAAI,CAAJ,MAAW,GAAd,EACIF,iBAAiBG,IAAjB,CAAsB,sBAAsBD,IAAIE,MAAJ,CAAW,CAAX,CAAtB,GAAsC,GAA5D,EADJ,KAGIL,kBAAkBI,IAAlB,CAAuB,sBAAsBD,GAAtB,GAA4B,GAAnD;AACP;;AAED3B,OAAG8B,aAAH,CACIV,QADJ,EAEI,QACA,gBADA,GAEA,UAFA,GAEaJ,KAAKX,IAFlB,GAEyB,OAFzB,GAGA,qBAHA,GAGwBW,KAAKe,OAH7B,GAGuC,MAHvC,GAIA,4BAJA,GAI+Bf,KAAKA,IAJpC,GAI2C,MAJ3C,IAKCS,iBAAiBV,MAAjB,GACG,+BACAU,iBAAiBO,IAAjB,CAAsB,KAAtB,CADA,GAC+B,IAD/B,IAECR,kBAAkBT,MAAlB,GACG,kBADH,GAEK,iBAJN,CADH,GAMK,EAXN,KAYCS,kBAAkBT,MAAlB,GACG,gCACAS,kBAAkBQ,IAAlB,CAAuB,KAAvB,CADA,GACgC,IADhC,GAEA,iBAHH,GAIK,EAhBN,IAiBA,aAjBA,GAkBA,SAlBA,GAmBA,KArBJ,EAsBI,EAACC,OAAO,IAAR,EAtBJ;;AAwBAtB,cAAUuB,OAAV,CAAkBN,IAAlB,CAAuB,YAAYZ,KAAKX,IAAjB,GAAwB,OAA/C;AACH;;AAEDM,UAAUuB,OAAV,CAAkBC,IAAlB;AACAnC,GAAG8B,aAAH,CAAiB,+BAAjB,EACiBM,KAAKC,SAAL,CAAe1B,SAAf,EAA0B,IAA1B,EAAgC,CAAhC,CADjB","file":"make-ace-modes.js","sourcesContent":["var fs = require('fs');\nvar modelist = {};\n\n// this is a very dirty implementation of require, but since we're only\n// importing one module, it will do\nglobal.define = function(name, injects, cb) {\n    var module = {exports: modelist};\n    cb(require, modelist, module);\n    modelist = module.exports;\n};\nglobal.window = {\n    require: function() {}\n}\nrequire('app/ace/ext-modelist.js');\n\nvar modesJson = require('app/config/default/modes.json');\n\nvar blacklist = ['c_cpp', 'css', 'golang', 'javascript', 'json', 'plain_text',\n                 'c9search', 'jsx', 'php', 'snippets'];\n\nfor(var i = 0; i < modelist.modes.length; i++) {\n    var mode = modelist.modes[i];\n    if(blacklist.indexOf(mode.name) >= 0) {\n        console.log(mode.name + ' blacklisted');\n        continue;\n    }\n    var jsonName = 'app/config/default/mode/' + mode.name + '.json';\n    if(fs.existsSync(jsonName)) {\n        console.log(mode.name + ' already exists');\n        continue;\n    }\n\n    var extensions = mode.extensions.split('|'),\n        extensions_pretty = [],\n        filenames_pretty = [];\n    for(var ei = 0; ei < extensions.length; ei++) {\n        var ext = extensions[ei];\n        if(ext[0] === '^')\n            filenames_pretty.push('                \"' + ext.substr(1) + '\"');\n        else\n            extensions_pretty.push('                \"' + ext + '\"');\n    }\n\n    fs.writeFileSync(\n        jsonName,\n        '{\\n' +\n        '    modes: {\\n' +\n        '        ' + mode.name + ': {\\n' +\n        '            name: \"' + mode.caption + '\",\\n' +\n        '            highlighter: \"' + mode.mode + '\",\\n' +\n        (filenames_pretty.length ?\n            '            filenames: [\\n' +\n            filenames_pretty.join(',\\n') + '\\n' +\n            (extensions_pretty.length ?\n                '            ],\\n'\n                : '            ]\\n')\n            : '') +\n        (extensions_pretty.length ?\n            '            extensions: [\\n' +\n            extensions_pretty.join(',\\n') + '\\n' +\n            '            ]\\n'\n            : '') +\n        '        }\\n' +\n        '    }\\n' +\n        '}\\n',\n        {flags: 'wx'});\n\n    modesJson.imports.push('./mode/' + mode.name + '.json');\n}\n\nmodesJson.imports.sort();\nfs.writeFileSync('app/config/default/modes.json',\n                 JSON.stringify(modesJson, null, 4));\n"]}